// Code generated by capnpc-go. DO NOT EDIT.

package types

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
	math "math"
	strconv "strconv"
)

type JsonValue capnp.Struct
type JsonValue_Which uint16

const (
	JsonValue_Which_null    JsonValue_Which = 0
	JsonValue_Which_boolean JsonValue_Which = 1
	JsonValue_Which_number  JsonValue_Which = 2
	JsonValue_Which_string_ JsonValue_Which = 3
	JsonValue_Which_array   JsonValue_Which = 4
	JsonValue_Which_object  JsonValue_Which = 5
	JsonValue_Which_call    JsonValue_Which = 6
)

func (w JsonValue_Which) String() string {
	const s = "nullbooleannumberstring_arrayobjectcall"
	switch w {
	case JsonValue_Which_null:
		return s[0:4]
	case JsonValue_Which_boolean:
		return s[4:11]
	case JsonValue_Which_number:
		return s[11:17]
	case JsonValue_Which_string_:
		return s[17:24]
	case JsonValue_Which_array:
		return s[24:29]
	case JsonValue_Which_object:
		return s[29:35]
	case JsonValue_Which_call:
		return s[35:39]

	}
	return "JsonValue_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// JsonValue_TypeID is the unique identifier for the type JsonValue.
const JsonValue_TypeID = 0xb646fc9bdea8828e

func NewJsonValue(s *capnp.Segment) (JsonValue, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return JsonValue(st), err
}

func NewRootJsonValue(s *capnp.Segment) (JsonValue, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return JsonValue(st), err
}

func ReadRootJsonValue(msg *capnp.Message) (JsonValue, error) {
	root, err := msg.Root()
	return JsonValue(root.Struct()), err
}

func (s JsonValue) String() string {
	str, _ := text.Marshal(0xb646fc9bdea8828e, capnp.Struct(s))
	return str
}

func (s JsonValue) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (JsonValue) DecodeFromPtr(p capnp.Ptr) JsonValue {
	return JsonValue(capnp.Struct{}.DecodeFromPtr(p))
}

func (s JsonValue) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}

func (s JsonValue) Which() JsonValue_Which {
	return JsonValue_Which(capnp.Struct(s).Uint16(0))
}
func (s JsonValue) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s JsonValue) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s JsonValue) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s JsonValue) SetNull() {
	capnp.Struct(s).SetUint16(0, 0)

}

func (s JsonValue) Boolean() bool {
	if capnp.Struct(s).Uint16(0) != 1 {
		panic("Which() != boolean")
	}
	return capnp.Struct(s).Bit(16)
}

func (s JsonValue) SetBoolean(v bool) {
	capnp.Struct(s).SetUint16(0, 1)
	capnp.Struct(s).SetBit(16, v)
}

func (s JsonValue) Number() float64 {
	if capnp.Struct(s).Uint16(0) != 2 {
		panic("Which() != number")
	}
	return math.Float64frombits(capnp.Struct(s).Uint64(8))
}

func (s JsonValue) SetNumber(v float64) {
	capnp.Struct(s).SetUint16(0, 2)
	capnp.Struct(s).SetUint64(8, math.Float64bits(v))
}

func (s JsonValue) String_() (string, error) {
	if capnp.Struct(s).Uint16(0) != 3 {
		panic("Which() != string_")
	}
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s JsonValue) HasString_() bool {
	if capnp.Struct(s).Uint16(0) != 3 {
		return false
	}
	return capnp.Struct(s).HasPtr(0)
}

func (s JsonValue) String_Bytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s JsonValue) SetString_(v string) error {
	capnp.Struct(s).SetUint16(0, 3)
	return capnp.Struct(s).SetText(0, v)
}

func (s JsonValue) Array() (JsonValue_List, error) {
	if capnp.Struct(s).Uint16(0) != 4 {
		panic("Which() != array")
	}
	p, err := capnp.Struct(s).Ptr(0)
	return JsonValue_List(p.List()), err
}

func (s JsonValue) HasArray() bool {
	if capnp.Struct(s).Uint16(0) != 4 {
		return false
	}
	return capnp.Struct(s).HasPtr(0)
}

func (s JsonValue) SetArray(v JsonValue_List) error {
	capnp.Struct(s).SetUint16(0, 4)
	return capnp.Struct(s).SetPtr(0, v.ToPtr())
}

// NewArray sets the array field to a newly
// allocated JsonValue_List, preferring placement in s's segment.
func (s JsonValue) NewArray(n int32) (JsonValue_List, error) {
	capnp.Struct(s).SetUint16(0, 4)
	l, err := NewJsonValue_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return JsonValue_List{}, err
	}
	err = capnp.Struct(s).SetPtr(0, l.ToPtr())
	return l, err
}
func (s JsonValue) Object() (JsonValue_Field_List, error) {
	if capnp.Struct(s).Uint16(0) != 5 {
		panic("Which() != object")
	}
	p, err := capnp.Struct(s).Ptr(0)
	return JsonValue_Field_List(p.List()), err
}

func (s JsonValue) HasObject() bool {
	if capnp.Struct(s).Uint16(0) != 5 {
		return false
	}
	return capnp.Struct(s).HasPtr(0)
}

func (s JsonValue) SetObject(v JsonValue_Field_List) error {
	capnp.Struct(s).SetUint16(0, 5)
	return capnp.Struct(s).SetPtr(0, v.ToPtr())
}

// NewObject sets the object field to a newly
// allocated JsonValue_Field_List, preferring placement in s's segment.
func (s JsonValue) NewObject(n int32) (JsonValue_Field_List, error) {
	capnp.Struct(s).SetUint16(0, 5)
	l, err := NewJsonValue_Field_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return JsonValue_Field_List{}, err
	}
	err = capnp.Struct(s).SetPtr(0, l.ToPtr())
	return l, err
}
func (s JsonValue) Call() (JsonValue_Call, error) {
	if capnp.Struct(s).Uint16(0) != 6 {
		panic("Which() != call")
	}
	p, err := capnp.Struct(s).Ptr(0)
	return JsonValue_Call(p.Struct()), err
}

func (s JsonValue) HasCall() bool {
	if capnp.Struct(s).Uint16(0) != 6 {
		return false
	}
	return capnp.Struct(s).HasPtr(0)
}

func (s JsonValue) SetCall(v JsonValue_Call) error {
	capnp.Struct(s).SetUint16(0, 6)
	return capnp.Struct(s).SetPtr(0, capnp.Struct(v).ToPtr())
}

// NewCall sets the call field to a newly
// allocated JsonValue_Call struct, preferring placement in s's segment.
func (s JsonValue) NewCall() (JsonValue_Call, error) {
	capnp.Struct(s).SetUint16(0, 6)
	ss, err := NewJsonValue_Call(capnp.Struct(s).Segment())
	if err != nil {
		return JsonValue_Call{}, err
	}
	err = capnp.Struct(s).SetPtr(0, capnp.Struct(ss).ToPtr())
	return ss, err
}

// JsonValue_List is a list of JsonValue.
type JsonValue_List = capnp.StructList[JsonValue]

// NewJsonValue creates a new list of JsonValue.
func NewJsonValue_List(s *capnp.Segment, sz int32) (JsonValue_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1}, sz)
	return capnp.StructList[JsonValue](l), err
}

// JsonValue_Future is a wrapper for a JsonValue promised by a client call.
type JsonValue_Future struct{ *capnp.Future }

func (f JsonValue_Future) Struct() (JsonValue, error) {
	p, err := f.Future.Ptr()
	return JsonValue(p.Struct()), err
}
func (p JsonValue_Future) Call() JsonValue_Call_Future {
	return JsonValue_Call_Future{Future: p.Future.Field(0, nil)}
}

type JsonValue_Field capnp.Struct

// JsonValue_Field_TypeID is the unique identifier for the type JsonValue_Field.
const JsonValue_Field_TypeID = 0x99d8d8a8f49ec4f6

func NewJsonValue_Field(s *capnp.Segment) (JsonValue_Field, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return JsonValue_Field(st), err
}

func NewRootJsonValue_Field(s *capnp.Segment) (JsonValue_Field, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return JsonValue_Field(st), err
}

func ReadRootJsonValue_Field(msg *capnp.Message) (JsonValue_Field, error) {
	root, err := msg.Root()
	return JsonValue_Field(root.Struct()), err
}

func (s JsonValue_Field) String() string {
	str, _ := text.Marshal(0x99d8d8a8f49ec4f6, capnp.Struct(s))
	return str
}

func (s JsonValue_Field) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (JsonValue_Field) DecodeFromPtr(p capnp.Ptr) JsonValue_Field {
	return JsonValue_Field(capnp.Struct{}.DecodeFromPtr(p))
}

func (s JsonValue_Field) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s JsonValue_Field) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s JsonValue_Field) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s JsonValue_Field) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s JsonValue_Field) Name() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s JsonValue_Field) HasName() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s JsonValue_Field) NameBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s JsonValue_Field) SetName(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s JsonValue_Field) Value() (JsonValue, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return JsonValue(p.Struct()), err
}

func (s JsonValue_Field) HasValue() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s JsonValue_Field) SetValue(v JsonValue) error {
	return capnp.Struct(s).SetPtr(1, capnp.Struct(v).ToPtr())
}

// NewValue sets the value field to a newly
// allocated JsonValue struct, preferring placement in s's segment.
func (s JsonValue_Field) NewValue() (JsonValue, error) {
	ss, err := NewJsonValue(capnp.Struct(s).Segment())
	if err != nil {
		return JsonValue{}, err
	}
	err = capnp.Struct(s).SetPtr(1, capnp.Struct(ss).ToPtr())
	return ss, err
}

// JsonValue_Field_List is a list of JsonValue_Field.
type JsonValue_Field_List = capnp.StructList[JsonValue_Field]

// NewJsonValue_Field creates a new list of JsonValue_Field.
func NewJsonValue_Field_List(s *capnp.Segment, sz int32) (JsonValue_Field_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[JsonValue_Field](l), err
}

// JsonValue_Field_Future is a wrapper for a JsonValue_Field promised by a client call.
type JsonValue_Field_Future struct{ *capnp.Future }

func (f JsonValue_Field_Future) Struct() (JsonValue_Field, error) {
	p, err := f.Future.Ptr()
	return JsonValue_Field(p.Struct()), err
}
func (p JsonValue_Field_Future) Value() JsonValue_Future {
	return JsonValue_Future{Future: p.Future.Field(1, nil)}
}

type JsonValue_Call capnp.Struct

// JsonValue_Call_TypeID is the unique identifier for the type JsonValue_Call.
const JsonValue_Call_TypeID = 0x8c72e334d0537d39

func NewJsonValue_Call(s *capnp.Segment) (JsonValue_Call, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return JsonValue_Call(st), err
}

func NewRootJsonValue_Call(s *capnp.Segment) (JsonValue_Call, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return JsonValue_Call(st), err
}

func ReadRootJsonValue_Call(msg *capnp.Message) (JsonValue_Call, error) {
	root, err := msg.Root()
	return JsonValue_Call(root.Struct()), err
}

func (s JsonValue_Call) String() string {
	str, _ := text.Marshal(0x8c72e334d0537d39, capnp.Struct(s))
	return str
}

func (s JsonValue_Call) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (JsonValue_Call) DecodeFromPtr(p capnp.Ptr) JsonValue_Call {
	return JsonValue_Call(capnp.Struct{}.DecodeFromPtr(p))
}

func (s JsonValue_Call) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s JsonValue_Call) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s JsonValue_Call) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s JsonValue_Call) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s JsonValue_Call) Function() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s JsonValue_Call) HasFunction() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s JsonValue_Call) FunctionBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s JsonValue_Call) SetFunction(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s JsonValue_Call) Params() (JsonValue_List, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return JsonValue_List(p.List()), err
}

func (s JsonValue_Call) HasParams() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s JsonValue_Call) SetParams(v JsonValue_List) error {
	return capnp.Struct(s).SetPtr(1, v.ToPtr())
}

// NewParams sets the params field to a newly
// allocated JsonValue_List, preferring placement in s's segment.
func (s JsonValue_Call) NewParams(n int32) (JsonValue_List, error) {
	l, err := NewJsonValue_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return JsonValue_List{}, err
	}
	err = capnp.Struct(s).SetPtr(1, l.ToPtr())
	return l, err
}

// JsonValue_Call_List is a list of JsonValue_Call.
type JsonValue_Call_List = capnp.StructList[JsonValue_Call]

// NewJsonValue_Call creates a new list of JsonValue_Call.
func NewJsonValue_Call_List(s *capnp.Segment, sz int32) (JsonValue_Call_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[JsonValue_Call](l), err
}

// JsonValue_Call_Future is a wrapper for a JsonValue_Call promised by a client call.
type JsonValue_Call_Future struct{ *capnp.Future }

func (f JsonValue_Call_Future) Struct() (JsonValue_Call, error) {
	p, err := f.Future.Ptr()
	return JsonValue_Call(p.Struct()), err
}

type Map capnp.Struct

// Map_TypeID is the unique identifier for the type Map.
const Map_TypeID = 0xaa771e93a5bfc713

func NewMap(s *capnp.Segment) (Map, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Map(st), err
}

func NewRootMap(s *capnp.Segment) (Map, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Map(st), err
}

func ReadRootMap(msg *capnp.Message) (Map, error) {
	root, err := msg.Root()
	return Map(root.Struct()), err
}

func (s Map) String() string {
	str, _ := text.Marshal(0xaa771e93a5bfc713, capnp.Struct(s))
	return str
}

func (s Map) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Map) DecodeFromPtr(p capnp.Ptr) Map {
	return Map(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Map) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Map) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Map) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Map) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Map) Entries() (Map_Entry_List, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return Map_Entry_List(p.List()), err
}

func (s Map) HasEntries() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Map) SetEntries(v Map_Entry_List) error {
	return capnp.Struct(s).SetPtr(0, v.ToPtr())
}

// NewEntries sets the entries field to a newly
// allocated Map_Entry_List, preferring placement in s's segment.
func (s Map) NewEntries(n int32) (Map_Entry_List, error) {
	l, err := NewMap_Entry_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return Map_Entry_List{}, err
	}
	err = capnp.Struct(s).SetPtr(0, l.ToPtr())
	return l, err
}

// Map_List is a list of Map.
type Map_List = capnp.StructList[Map]

// NewMap creates a new list of Map.
func NewMap_List(s *capnp.Segment, sz int32) (Map_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Map](l), err
}

// Map_Future is a wrapper for a Map promised by a client call.
type Map_Future struct{ *capnp.Future }

func (f Map_Future) Struct() (Map, error) {
	p, err := f.Future.Ptr()
	return Map(p.Struct()), err
}

type Map_Entry capnp.Struct

// Map_Entry_TypeID is the unique identifier for the type Map_Entry.
const Map_Entry_TypeID = 0xb000b19244fa63f4

func NewMap_Entry(s *capnp.Segment) (Map_Entry, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Map_Entry(st), err
}

func NewRootMap_Entry(s *capnp.Segment) (Map_Entry, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Map_Entry(st), err
}

func ReadRootMap_Entry(msg *capnp.Message) (Map_Entry, error) {
	root, err := msg.Root()
	return Map_Entry(root.Struct()), err
}

func (s Map_Entry) String() string {
	str, _ := text.Marshal(0xb000b19244fa63f4, capnp.Struct(s))
	return str
}

func (s Map_Entry) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Map_Entry) DecodeFromPtr(p capnp.Ptr) Map_Entry {
	return Map_Entry(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Map_Entry) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Map_Entry) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Map_Entry) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Map_Entry) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Map_Entry) Key() (capnp.Ptr, error) {
	return capnp.Struct(s).Ptr(0)
}

func (s Map_Entry) HasKey() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Map_Entry) SetKey(v capnp.Ptr) error {
	return capnp.Struct(s).SetPtr(0, v)
}
func (s Map_Entry) Value() (capnp.Ptr, error) {
	return capnp.Struct(s).Ptr(1)
}

func (s Map_Entry) HasValue() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Map_Entry) SetValue(v capnp.Ptr) error {
	return capnp.Struct(s).SetPtr(1, v)
}

// Map_Entry_List is a list of Map_Entry.
type Map_Entry_List = capnp.StructList[Map_Entry]

// NewMap_Entry creates a new list of Map_Entry.
func NewMap_Entry_List(s *capnp.Segment, sz int32) (Map_Entry_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[Map_Entry](l), err
}

// Map_Entry_Future is a wrapper for a Map_Entry promised by a client call.
type Map_Entry_Future struct{ *capnp.Future }

func (f Map_Entry_Future) Struct() (Map_Entry, error) {
	p, err := f.Future.Ptr()
	return Map_Entry(p.Struct()), err
}
func (p Map_Entry_Future) Key() *capnp.Future {
	return p.Future.Field(0, nil)
}
func (p Map_Entry_Future) Value() *capnp.Future {
	return p.Future.Field(1, nil)
}

type Signature capnp.Struct

// Signature_TypeID is the unique identifier for the type Signature.
const Signature_TypeID = 0xbe04b152eaffa6c8

func NewSignature(s *capnp.Segment) (Signature, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Signature(st), err
}

func NewRootSignature(s *capnp.Segment) (Signature, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Signature(st), err
}

func ReadRootSignature(msg *capnp.Message) (Signature, error) {
	root, err := msg.Root()
	return Signature(root.Struct()), err
}

func (s Signature) String() string {
	str, _ := text.Marshal(0xbe04b152eaffa6c8, capnp.Struct(s))
	return str
}

func (s Signature) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Signature) DecodeFromPtr(p capnp.Ptr) Signature {
	return Signature(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Signature) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Signature) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Signature) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Signature) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Signature) Server() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Signature) HasServer() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Signature) ServerBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Signature) SetServer(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Signature) Signatures() (Map, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return Map(p.Struct()), err
}

func (s Signature) HasSignatures() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Signature) SetSignatures(v Map) error {
	return capnp.Struct(s).SetPtr(1, capnp.Struct(v).ToPtr())
}

// NewSignatures sets the signatures field to a newly
// allocated Map struct, preferring placement in s's segment.
func (s Signature) NewSignatures() (Map, error) {
	ss, err := NewMap(capnp.Struct(s).Segment())
	if err != nil {
		return Map{}, err
	}
	err = capnp.Struct(s).SetPtr(1, capnp.Struct(ss).ToPtr())
	return ss, err
}

// Signature_List is a list of Signature.
type Signature_List = capnp.StructList[Signature]

// NewSignature creates a new list of Signature.
func NewSignature_List(s *capnp.Segment, sz int32) (Signature_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[Signature](l), err
}

// Signature_Future is a wrapper for a Signature promised by a client call.
type Signature_Future struct{ *capnp.Future }

func (f Signature_Future) Struct() (Signature, error) {
	p, err := f.Future.Ptr()
	return Signature(p.Struct()), err
}
func (p Signature_Future) Signatures() Map_Future {
	return Map_Future{Future: p.Future.Field(1, nil)}
}

type AuthData capnp.Struct

// AuthData_TypeID is the unique identifier for the type AuthData.
const AuthData_TypeID = 0xd9a283298fbeb191

func NewAuthData(s *capnp.Segment) (AuthData, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return AuthData(st), err
}

func NewRootAuthData(s *capnp.Segment) (AuthData, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return AuthData(st), err
}

func ReadRootAuthData(msg *capnp.Message) (AuthData, error) {
	root, err := msg.Root()
	return AuthData(root.Struct()), err
}

func (s AuthData) String() string {
	str, _ := text.Marshal(0xd9a283298fbeb191, capnp.Struct(s))
	return str
}

func (s AuthData) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (AuthData) DecodeFromPtr(p capnp.Ptr) AuthData {
	return AuthData(capnp.Struct{}.DecodeFromPtr(p))
}

func (s AuthData) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s AuthData) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s AuthData) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s AuthData) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s AuthData) Method() uint64 {
	return capnp.Struct(s).Uint64(0)
}

func (s AuthData) SetMethod(v uint64) {
	capnp.Struct(s).SetUint64(0, v)
}

func (s AuthData) Origin() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s AuthData) HasOrigin() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s AuthData) OriginBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s AuthData) SetOrigin(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s AuthData) Destination() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s AuthData) HasDestination() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s AuthData) DestinationBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s AuthData) SetDestination(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s AuthData) Signatures() (Signature_List, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return Signature_List(p.List()), err
}

func (s AuthData) HasSignatures() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s AuthData) SetSignatures(v Signature_List) error {
	return capnp.Struct(s).SetPtr(2, v.ToPtr())
}

// NewSignatures sets the signatures field to a newly
// allocated Signature_List, preferring placement in s's segment.
func (s AuthData) NewSignatures(n int32) (Signature_List, error) {
	l, err := NewSignature_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return Signature_List{}, err
	}
	err = capnp.Struct(s).SetPtr(2, l.ToPtr())
	return l, err
}

// AuthData_List is a list of AuthData.
type AuthData_List = capnp.StructList[AuthData]

// NewAuthData creates a new list of AuthData.
func NewAuthData_List(s *capnp.Segment, sz int32) (AuthData_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return capnp.StructList[AuthData](l), err
}

// AuthData_Future is a wrapper for a AuthData promised by a client call.
type AuthData_Future struct{ *capnp.Future }

func (f AuthData_Future) Struct() (AuthData, error) {
	p, err := f.Future.Ptr()
	return AuthData(p.Struct()), err
}

type ServerVersion capnp.Struct

// ServerVersion_TypeID is the unique identifier for the type ServerVersion.
const ServerVersion_TypeID = 0xe833d93baba2deb6

func NewServerVersion(s *capnp.Segment) (ServerVersion, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return ServerVersion(st), err
}

func NewRootServerVersion(s *capnp.Segment) (ServerVersion, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return ServerVersion(st), err
}

func ReadRootServerVersion(msg *capnp.Message) (ServerVersion, error) {
	root, err := msg.Root()
	return ServerVersion(root.Struct()), err
}

func (s ServerVersion) String() string {
	str, _ := text.Marshal(0xe833d93baba2deb6, capnp.Struct(s))
	return str
}

func (s ServerVersion) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (ServerVersion) DecodeFromPtr(p capnp.Ptr) ServerVersion {
	return ServerVersion(capnp.Struct{}.DecodeFromPtr(p))
}

func (s ServerVersion) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s ServerVersion) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s ServerVersion) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s ServerVersion) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s ServerVersion) Name() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s ServerVersion) HasName() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s ServerVersion) NameBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s ServerVersion) SetName(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s ServerVersion) Version() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s ServerVersion) HasVersion() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s ServerVersion) VersionBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s ServerVersion) SetVersion(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

// ServerVersion_List is a list of ServerVersion.
type ServerVersion_List = capnp.StructList[ServerVersion]

// NewServerVersion creates a new list of ServerVersion.
func NewServerVersion_List(s *capnp.Segment, sz int32) (ServerVersion_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[ServerVersion](l), err
}

// ServerVersion_Future is a wrapper for a ServerVersion promised by a client call.
type ServerVersion_Future struct{ *capnp.Future }

func (f ServerVersion_Future) Struct() (ServerVersion, error) {
	p, err := f.Future.Ptr()
	return ServerVersion(p.Struct()), err
}

type QueryCriteria capnp.Struct

// QueryCriteria_TypeID is the unique identifier for the type QueryCriteria.
const QueryCriteria_TypeID = 0xbbc6594b64ec5041

func NewQueryCriteria(s *capnp.Segment) (QueryCriteria, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return QueryCriteria(st), err
}

func NewRootQueryCriteria(s *capnp.Segment) (QueryCriteria, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return QueryCriteria(st), err
}

func ReadRootQueryCriteria(msg *capnp.Message) (QueryCriteria, error) {
	root, err := msg.Root()
	return QueryCriteria(root.Struct()), err
}

func (s QueryCriteria) String() string {
	str, _ := text.Marshal(0xbbc6594b64ec5041, capnp.Struct(s))
	return str
}

func (s QueryCriteria) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (QueryCriteria) DecodeFromPtr(p capnp.Ptr) QueryCriteria {
	return QueryCriteria(capnp.Struct{}.DecodeFromPtr(p))
}

func (s QueryCriteria) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s QueryCriteria) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s QueryCriteria) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s QueryCriteria) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s QueryCriteria) MinimumValidUntilTS() int64 {
	return int64(capnp.Struct(s).Uint64(0))
}

func (s QueryCriteria) SetMinimumValidUntilTS(v int64) {
	capnp.Struct(s).SetUint64(0, uint64(v))
}

// QueryCriteria_List is a list of QueryCriteria.
type QueryCriteria_List = capnp.StructList[QueryCriteria]

// NewQueryCriteria creates a new list of QueryCriteria.
func NewQueryCriteria_List(s *capnp.Segment, sz int32) (QueryCriteria_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return capnp.StructList[QueryCriteria](l), err
}

// QueryCriteria_Future is a wrapper for a QueryCriteria promised by a client call.
type QueryCriteria_Future struct{ *capnp.Future }

func (f QueryCriteria_Future) Struct() (QueryCriteria, error) {
	p, err := f.Future.Ptr()
	return QueryCriteria(p.Struct()), err
}

type ServerKeysResponse capnp.Struct
type ServerKeysResponse_Which uint16

const (
	ServerKeysResponse_Which_metadata      ServerKeysResponse_Which = 0
	ServerKeysResponse_Which_verifyKeys    ServerKeysResponse_Which = 1
	ServerKeysResponse_Which_oldVerifyKeys ServerKeysResponse_Which = 2
)

func (w ServerKeysResponse_Which) String() string {
	const s = "metadataverifyKeysoldVerifyKeys"
	switch w {
	case ServerKeysResponse_Which_metadata:
		return s[0:8]
	case ServerKeysResponse_Which_verifyKeys:
		return s[8:18]
	case ServerKeysResponse_Which_oldVerifyKeys:
		return s[18:31]

	}
	return "ServerKeysResponse_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// ServerKeysResponse_TypeID is the unique identifier for the type ServerKeysResponse.
const ServerKeysResponse_TypeID = 0x91bc94026aa73194

func NewServerKeysResponse(s *capnp.Segment) (ServerKeysResponse, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return ServerKeysResponse(st), err
}

func NewRootServerKeysResponse(s *capnp.Segment) (ServerKeysResponse, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return ServerKeysResponse(st), err
}

func ReadRootServerKeysResponse(msg *capnp.Message) (ServerKeysResponse, error) {
	root, err := msg.Root()
	return ServerKeysResponse(root.Struct()), err
}

func (s ServerKeysResponse) String() string {
	str, _ := text.Marshal(0x91bc94026aa73194, capnp.Struct(s))
	return str
}

func (s ServerKeysResponse) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (ServerKeysResponse) DecodeFromPtr(p capnp.Ptr) ServerKeysResponse {
	return ServerKeysResponse(capnp.Struct{}.DecodeFromPtr(p))
}

func (s ServerKeysResponse) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}

func (s ServerKeysResponse) Which() ServerKeysResponse_Which {
	return ServerKeysResponse_Which(capnp.Struct(s).Uint16(0))
}
func (s ServerKeysResponse) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s ServerKeysResponse) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s ServerKeysResponse) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s ServerKeysResponse) Signatures() (Signature_List, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return Signature_List(p.List()), err
}

func (s ServerKeysResponse) HasSignatures() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s ServerKeysResponse) SetSignatures(v Signature_List) error {
	return capnp.Struct(s).SetPtr(0, v.ToPtr())
}

// NewSignatures sets the signatures field to a newly
// allocated Signature_List, preferring placement in s's segment.
func (s ServerKeysResponse) NewSignatures(n int32) (Signature_List, error) {
	l, err := NewSignature_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return Signature_List{}, err
	}
	err = capnp.Struct(s).SetPtr(0, l.ToPtr())
	return l, err
}
func (s ServerKeysResponse) Metadata() (ServerKeysResponse_Metadata, error) {
	if capnp.Struct(s).Uint16(0) != 0 {
		panic("Which() != metadata")
	}
	p, err := capnp.Struct(s).Ptr(1)
	return ServerKeysResponse_Metadata(p.Struct()), err
}

func (s ServerKeysResponse) HasMetadata() bool {
	if capnp.Struct(s).Uint16(0) != 0 {
		return false
	}
	return capnp.Struct(s).HasPtr(1)
}

func (s ServerKeysResponse) SetMetadata(v ServerKeysResponse_Metadata) error {
	capnp.Struct(s).SetUint16(0, 0)
	return capnp.Struct(s).SetPtr(1, capnp.Struct(v).ToPtr())
}

// NewMetadata sets the metadata field to a newly
// allocated ServerKeysResponse_Metadata struct, preferring placement in s's segment.
func (s ServerKeysResponse) NewMetadata() (ServerKeysResponse_Metadata, error) {
	capnp.Struct(s).SetUint16(0, 0)
	ss, err := NewServerKeysResponse_Metadata(capnp.Struct(s).Segment())
	if err != nil {
		return ServerKeysResponse_Metadata{}, err
	}
	err = capnp.Struct(s).SetPtr(1, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s ServerKeysResponse) VerifyKeys() (Map, error) {
	if capnp.Struct(s).Uint16(0) != 1 {
		panic("Which() != verifyKeys")
	}
	p, err := capnp.Struct(s).Ptr(1)
	return Map(p.Struct()), err
}

func (s ServerKeysResponse) HasVerifyKeys() bool {
	if capnp.Struct(s).Uint16(0) != 1 {
		return false
	}
	return capnp.Struct(s).HasPtr(1)
}

func (s ServerKeysResponse) SetVerifyKeys(v Map) error {
	capnp.Struct(s).SetUint16(0, 1)
	return capnp.Struct(s).SetPtr(1, capnp.Struct(v).ToPtr())
}

// NewVerifyKeys sets the verifyKeys field to a newly
// allocated Map struct, preferring placement in s's segment.
func (s ServerKeysResponse) NewVerifyKeys() (Map, error) {
	capnp.Struct(s).SetUint16(0, 1)
	ss, err := NewMap(capnp.Struct(s).Segment())
	if err != nil {
		return Map{}, err
	}
	err = capnp.Struct(s).SetPtr(1, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s ServerKeysResponse) OldVerifyKeys() (Map, error) {
	if capnp.Struct(s).Uint16(0) != 2 {
		panic("Which() != oldVerifyKeys")
	}
	p, err := capnp.Struct(s).Ptr(1)
	return Map(p.Struct()), err
}

func (s ServerKeysResponse) HasOldVerifyKeys() bool {
	if capnp.Struct(s).Uint16(0) != 2 {
		return false
	}
	return capnp.Struct(s).HasPtr(1)
}

func (s ServerKeysResponse) SetOldVerifyKeys(v Map) error {
	capnp.Struct(s).SetUint16(0, 2)
	return capnp.Struct(s).SetPtr(1, capnp.Struct(v).ToPtr())
}

// NewOldVerifyKeys sets the oldVerifyKeys field to a newly
// allocated Map struct, preferring placement in s's segment.
func (s ServerKeysResponse) NewOldVerifyKeys() (Map, error) {
	capnp.Struct(s).SetUint16(0, 2)
	ss, err := NewMap(capnp.Struct(s).Segment())
	if err != nil {
		return Map{}, err
	}
	err = capnp.Struct(s).SetPtr(1, capnp.Struct(ss).ToPtr())
	return ss, err
}

// ServerKeysResponse_List is a list of ServerKeysResponse.
type ServerKeysResponse_List = capnp.StructList[ServerKeysResponse]

// NewServerKeysResponse creates a new list of ServerKeysResponse.
func NewServerKeysResponse_List(s *capnp.Segment, sz int32) (ServerKeysResponse_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return capnp.StructList[ServerKeysResponse](l), err
}

// ServerKeysResponse_Future is a wrapper for a ServerKeysResponse promised by a client call.
type ServerKeysResponse_Future struct{ *capnp.Future }

func (f ServerKeysResponse_Future) Struct() (ServerKeysResponse, error) {
	p, err := f.Future.Ptr()
	return ServerKeysResponse(p.Struct()), err
}
func (p ServerKeysResponse_Future) Metadata() ServerKeysResponse_Metadata_Future {
	return ServerKeysResponse_Metadata_Future{Future: p.Future.Field(1, nil)}
}
func (p ServerKeysResponse_Future) VerifyKeys() Map_Future {
	return Map_Future{Future: p.Future.Field(1, nil)}
}
func (p ServerKeysResponse_Future) OldVerifyKeys() Map_Future {
	return Map_Future{Future: p.Future.Field(1, nil)}
}

type ServerKeysResponse_Metadata capnp.Struct

// ServerKeysResponse_Metadata_TypeID is the unique identifier for the type ServerKeysResponse_Metadata.
const ServerKeysResponse_Metadata_TypeID = 0xc6b8d5e8d14b4b9b

func NewServerKeysResponse_Metadata(s *capnp.Segment) (ServerKeysResponse_Metadata, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return ServerKeysResponse_Metadata(st), err
}

func NewRootServerKeysResponse_Metadata(s *capnp.Segment) (ServerKeysResponse_Metadata, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return ServerKeysResponse_Metadata(st), err
}

func ReadRootServerKeysResponse_Metadata(msg *capnp.Message) (ServerKeysResponse_Metadata, error) {
	root, err := msg.Root()
	return ServerKeysResponse_Metadata(root.Struct()), err
}

func (s ServerKeysResponse_Metadata) String() string {
	str, _ := text.Marshal(0xc6b8d5e8d14b4b9b, capnp.Struct(s))
	return str
}

func (s ServerKeysResponse_Metadata) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (ServerKeysResponse_Metadata) DecodeFromPtr(p capnp.Ptr) ServerKeysResponse_Metadata {
	return ServerKeysResponse_Metadata(capnp.Struct{}.DecodeFromPtr(p))
}

func (s ServerKeysResponse_Metadata) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s ServerKeysResponse_Metadata) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s ServerKeysResponse_Metadata) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s ServerKeysResponse_Metadata) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s ServerKeysResponse_Metadata) ServerName() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s ServerKeysResponse_Metadata) HasServerName() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s ServerKeysResponse_Metadata) ServerNameBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s ServerKeysResponse_Metadata) SetServerName(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s ServerKeysResponse_Metadata) ValidUntilTS() int64 {
	return int64(capnp.Struct(s).Uint64(0))
}

func (s ServerKeysResponse_Metadata) SetValidUntilTS(v int64) {
	capnp.Struct(s).SetUint64(0, uint64(v))
}

// ServerKeysResponse_Metadata_List is a list of ServerKeysResponse_Metadata.
type ServerKeysResponse_Metadata_List = capnp.StructList[ServerKeysResponse_Metadata]

// NewServerKeysResponse_Metadata creates a new list of ServerKeysResponse_Metadata.
func NewServerKeysResponse_Metadata_List(s *capnp.Segment, sz int32) (ServerKeysResponse_Metadata_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return capnp.StructList[ServerKeysResponse_Metadata](l), err
}

// ServerKeysResponse_Metadata_Future is a wrapper for a ServerKeysResponse_Metadata promised by a client call.
type ServerKeysResponse_Metadata_Future struct{ *capnp.Future }

func (f ServerKeysResponse_Metadata_Future) Struct() (ServerKeysResponse_Metadata, error) {
	p, err := f.Future.Ptr()
	return ServerKeysResponse_Metadata(p.Struct()), err
}

type ServerKeysResponse_OldVerifyKey capnp.Struct

// ServerKeysResponse_OldVerifyKey_TypeID is the unique identifier for the type ServerKeysResponse_OldVerifyKey.
const ServerKeysResponse_OldVerifyKey_TypeID = 0x956498bd24be9c30

func NewServerKeysResponse_OldVerifyKey(s *capnp.Segment) (ServerKeysResponse_OldVerifyKey, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return ServerKeysResponse_OldVerifyKey(st), err
}

func NewRootServerKeysResponse_OldVerifyKey(s *capnp.Segment) (ServerKeysResponse_OldVerifyKey, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return ServerKeysResponse_OldVerifyKey(st), err
}

func ReadRootServerKeysResponse_OldVerifyKey(msg *capnp.Message) (ServerKeysResponse_OldVerifyKey, error) {
	root, err := msg.Root()
	return ServerKeysResponse_OldVerifyKey(root.Struct()), err
}

func (s ServerKeysResponse_OldVerifyKey) String() string {
	str, _ := text.Marshal(0x956498bd24be9c30, capnp.Struct(s))
	return str
}

func (s ServerKeysResponse_OldVerifyKey) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (ServerKeysResponse_OldVerifyKey) DecodeFromPtr(p capnp.Ptr) ServerKeysResponse_OldVerifyKey {
	return ServerKeysResponse_OldVerifyKey(capnp.Struct{}.DecodeFromPtr(p))
}

func (s ServerKeysResponse_OldVerifyKey) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s ServerKeysResponse_OldVerifyKey) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s ServerKeysResponse_OldVerifyKey) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s ServerKeysResponse_OldVerifyKey) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s ServerKeysResponse_OldVerifyKey) ExpiredTS() int64 {
	return int64(capnp.Struct(s).Uint64(0))
}

func (s ServerKeysResponse_OldVerifyKey) SetExpiredTS(v int64) {
	capnp.Struct(s).SetUint64(0, uint64(v))
}

func (s ServerKeysResponse_OldVerifyKey) Key() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return []byte(p.Data()), err
}

func (s ServerKeysResponse_OldVerifyKey) HasKey() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s ServerKeysResponse_OldVerifyKey) SetKey(v []byte) error {
	return capnp.Struct(s).SetData(0, v)
}

// ServerKeysResponse_OldVerifyKey_List is a list of ServerKeysResponse_OldVerifyKey.
type ServerKeysResponse_OldVerifyKey_List = capnp.StructList[ServerKeysResponse_OldVerifyKey]

// NewServerKeysResponse_OldVerifyKey creates a new list of ServerKeysResponse_OldVerifyKey.
func NewServerKeysResponse_OldVerifyKey_List(s *capnp.Segment, sz int32) (ServerKeysResponse_OldVerifyKey_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return capnp.StructList[ServerKeysResponse_OldVerifyKey](l), err
}

// ServerKeysResponse_OldVerifyKey_Future is a wrapper for a ServerKeysResponse_OldVerifyKey promised by a client call.
type ServerKeysResponse_OldVerifyKey_Future struct{ *capnp.Future }

func (f ServerKeysResponse_OldVerifyKey_Future) Struct() (ServerKeysResponse_OldVerifyKey, error) {
	p, err := f.Future.Ptr()
	return ServerKeysResponse_OldVerifyKey(p.Struct()), err
}

type Transaction capnp.Struct
type Transaction_Which uint16

const (
	Transaction_Which_metadata Transaction_Which = 0
	Transaction_Which_edu      Transaction_Which = 1
	Transaction_Which_pdu      Transaction_Which = 2
)

func (w Transaction_Which) String() string {
	const s = "metadataedupdu"
	switch w {
	case Transaction_Which_metadata:
		return s[0:8]
	case Transaction_Which_edu:
		return s[8:11]
	case Transaction_Which_pdu:
		return s[11:14]

	}
	return "Transaction_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// Transaction_TypeID is the unique identifier for the type Transaction.
const Transaction_TypeID = 0x84bc4046c477cd59

func NewTransaction(s *capnp.Segment) (Transaction, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Transaction(st), err
}

func NewRootTransaction(s *capnp.Segment) (Transaction, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Transaction(st), err
}

func ReadRootTransaction(msg *capnp.Message) (Transaction, error) {
	root, err := msg.Root()
	return Transaction(root.Struct()), err
}

func (s Transaction) String() string {
	str, _ := text.Marshal(0x84bc4046c477cd59, capnp.Struct(s))
	return str
}

func (s Transaction) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Transaction) DecodeFromPtr(p capnp.Ptr) Transaction {
	return Transaction(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Transaction) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}

func (s Transaction) Which() Transaction_Which {
	return Transaction_Which(capnp.Struct(s).Uint16(0))
}
func (s Transaction) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Transaction) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Transaction) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Transaction) AuthData() (AuthData, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return AuthData(p.Struct()), err
}

func (s Transaction) HasAuthData() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Transaction) SetAuthData(v AuthData) error {
	return capnp.Struct(s).SetPtr(0, capnp.Struct(v).ToPtr())
}

// NewAuthData sets the authData field to a newly
// allocated AuthData struct, preferring placement in s's segment.
func (s Transaction) NewAuthData() (AuthData, error) {
	ss, err := NewAuthData(capnp.Struct(s).Segment())
	if err != nil {
		return AuthData{}, err
	}
	err = capnp.Struct(s).SetPtr(0, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Transaction) Metadata() (Transaction_Metadata, error) {
	if capnp.Struct(s).Uint16(0) != 0 {
		panic("Which() != metadata")
	}
	p, err := capnp.Struct(s).Ptr(1)
	return Transaction_Metadata(p.Struct()), err
}

func (s Transaction) HasMetadata() bool {
	if capnp.Struct(s).Uint16(0) != 0 {
		return false
	}
	return capnp.Struct(s).HasPtr(1)
}

func (s Transaction) SetMetadata(v Transaction_Metadata) error {
	capnp.Struct(s).SetUint16(0, 0)
	return capnp.Struct(s).SetPtr(1, capnp.Struct(v).ToPtr())
}

// NewMetadata sets the metadata field to a newly
// allocated Transaction_Metadata struct, preferring placement in s's segment.
func (s Transaction) NewMetadata() (Transaction_Metadata, error) {
	capnp.Struct(s).SetUint16(0, 0)
	ss, err := NewTransaction_Metadata(capnp.Struct(s).Segment())
	if err != nil {
		return Transaction_Metadata{}, err
	}
	err = capnp.Struct(s).SetPtr(1, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Transaction) Edu() (Transaction_EDU, error) {
	if capnp.Struct(s).Uint16(0) != 1 {
		panic("Which() != edu")
	}
	p, err := capnp.Struct(s).Ptr(1)
	return Transaction_EDU(p.Struct()), err
}

func (s Transaction) HasEdu() bool {
	if capnp.Struct(s).Uint16(0) != 1 {
		return false
	}
	return capnp.Struct(s).HasPtr(1)
}

func (s Transaction) SetEdu(v Transaction_EDU) error {
	capnp.Struct(s).SetUint16(0, 1)
	return capnp.Struct(s).SetPtr(1, capnp.Struct(v).ToPtr())
}

// NewEdu sets the edu field to a newly
// allocated Transaction_EDU struct, preferring placement in s's segment.
func (s Transaction) NewEdu() (Transaction_EDU, error) {
	capnp.Struct(s).SetUint16(0, 1)
	ss, err := NewTransaction_EDU(capnp.Struct(s).Segment())
	if err != nil {
		return Transaction_EDU{}, err
	}
	err = capnp.Struct(s).SetPtr(1, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Transaction) Pdu() (Transaction_PDU, error) {
	if capnp.Struct(s).Uint16(0) != 2 {
		panic("Which() != pdu")
	}
	p, err := capnp.Struct(s).Ptr(1)
	return Transaction_PDU(p.Struct()), err
}

func (s Transaction) HasPdu() bool {
	if capnp.Struct(s).Uint16(0) != 2 {
		return false
	}
	return capnp.Struct(s).HasPtr(1)
}

func (s Transaction) SetPdu(v Transaction_PDU) error {
	capnp.Struct(s).SetUint16(0, 2)
	return capnp.Struct(s).SetPtr(1, capnp.Struct(v).ToPtr())
}

// NewPdu sets the pdu field to a newly
// allocated Transaction_PDU struct, preferring placement in s's segment.
func (s Transaction) NewPdu() (Transaction_PDU, error) {
	capnp.Struct(s).SetUint16(0, 2)
	ss, err := NewTransaction_PDU(capnp.Struct(s).Segment())
	if err != nil {
		return Transaction_PDU{}, err
	}
	err = capnp.Struct(s).SetPtr(1, capnp.Struct(ss).ToPtr())
	return ss, err
}

// Transaction_List is a list of Transaction.
type Transaction_List = capnp.StructList[Transaction]

// NewTransaction creates a new list of Transaction.
func NewTransaction_List(s *capnp.Segment, sz int32) (Transaction_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return capnp.StructList[Transaction](l), err
}

// Transaction_Future is a wrapper for a Transaction promised by a client call.
type Transaction_Future struct{ *capnp.Future }

func (f Transaction_Future) Struct() (Transaction, error) {
	p, err := f.Future.Ptr()
	return Transaction(p.Struct()), err
}
func (p Transaction_Future) AuthData() AuthData_Future {
	return AuthData_Future{Future: p.Future.Field(0, nil)}
}
func (p Transaction_Future) Metadata() Transaction_Metadata_Future {
	return Transaction_Metadata_Future{Future: p.Future.Field(1, nil)}
}
func (p Transaction_Future) Edu() Transaction_EDU_Future {
	return Transaction_EDU_Future{Future: p.Future.Field(1, nil)}
}
func (p Transaction_Future) Pdu() Transaction_PDU_Future {
	return Transaction_PDU_Future{Future: p.Future.Field(1, nil)}
}

type Transaction_Metadata capnp.Struct

// Transaction_Metadata_TypeID is the unique identifier for the type Transaction_Metadata.
const Transaction_Metadata_TypeID = 0xc97074bcbc8f1239

func NewTransaction_Metadata(s *capnp.Segment) (Transaction_Metadata, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Transaction_Metadata(st), err
}

func NewRootTransaction_Metadata(s *capnp.Segment) (Transaction_Metadata, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Transaction_Metadata(st), err
}

func ReadRootTransaction_Metadata(msg *capnp.Message) (Transaction_Metadata, error) {
	root, err := msg.Root()
	return Transaction_Metadata(root.Struct()), err
}

func (s Transaction_Metadata) String() string {
	str, _ := text.Marshal(0xc97074bcbc8f1239, capnp.Struct(s))
	return str
}

func (s Transaction_Metadata) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Transaction_Metadata) DecodeFromPtr(p capnp.Ptr) Transaction_Metadata {
	return Transaction_Metadata(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Transaction_Metadata) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Transaction_Metadata) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Transaction_Metadata) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Transaction_Metadata) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Transaction_Metadata) TxnID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Transaction_Metadata) HasTxnID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Transaction_Metadata) TxnIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Transaction_Metadata) SetTxnID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Transaction_Metadata) Origin() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s Transaction_Metadata) HasOrigin() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Transaction_Metadata) OriginBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s Transaction_Metadata) SetOrigin(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s Transaction_Metadata) OriginServerTS() int64 {
	return int64(capnp.Struct(s).Uint64(0))
}

func (s Transaction_Metadata) SetOriginServerTS(v int64) {
	capnp.Struct(s).SetUint64(0, uint64(v))
}

// Transaction_Metadata_List is a list of Transaction_Metadata.
type Transaction_Metadata_List = capnp.StructList[Transaction_Metadata]

// NewTransaction_Metadata creates a new list of Transaction_Metadata.
func NewTransaction_Metadata_List(s *capnp.Segment, sz int32) (Transaction_Metadata_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return capnp.StructList[Transaction_Metadata](l), err
}

// Transaction_Metadata_Future is a wrapper for a Transaction_Metadata promised by a client call.
type Transaction_Metadata_Future struct{ *capnp.Future }

func (f Transaction_Metadata_Future) Struct() (Transaction_Metadata, error) {
	p, err := f.Future.Ptr()
	return Transaction_Metadata(p.Struct()), err
}

type Transaction_EDU capnp.Struct

// Transaction_EDU_TypeID is the unique identifier for the type Transaction_EDU.
const Transaction_EDU_TypeID = 0xa18f0aa774bf394b

func NewTransaction_EDU(s *capnp.Segment) (Transaction_EDU, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Transaction_EDU(st), err
}

func NewRootTransaction_EDU(s *capnp.Segment) (Transaction_EDU, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Transaction_EDU(st), err
}

func ReadRootTransaction_EDU(msg *capnp.Message) (Transaction_EDU, error) {
	root, err := msg.Root()
	return Transaction_EDU(root.Struct()), err
}

func (s Transaction_EDU) String() string {
	str, _ := text.Marshal(0xa18f0aa774bf394b, capnp.Struct(s))
	return str
}

func (s Transaction_EDU) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Transaction_EDU) DecodeFromPtr(p capnp.Ptr) Transaction_EDU {
	return Transaction_EDU(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Transaction_EDU) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Transaction_EDU) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Transaction_EDU) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Transaction_EDU) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Transaction_EDU) EduType() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Transaction_EDU) HasEduType() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Transaction_EDU) EduTypeBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Transaction_EDU) SetEduType(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Transaction_EDU) Content() (JsonValue, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return JsonValue(p.Struct()), err
}

func (s Transaction_EDU) HasContent() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Transaction_EDU) SetContent(v JsonValue) error {
	return capnp.Struct(s).SetPtr(1, capnp.Struct(v).ToPtr())
}

// NewContent sets the content field to a newly
// allocated JsonValue struct, preferring placement in s's segment.
func (s Transaction_EDU) NewContent() (JsonValue, error) {
	ss, err := NewJsonValue(capnp.Struct(s).Segment())
	if err != nil {
		return JsonValue{}, err
	}
	err = capnp.Struct(s).SetPtr(1, capnp.Struct(ss).ToPtr())
	return ss, err
}

// Transaction_EDU_List is a list of Transaction_EDU.
type Transaction_EDU_List = capnp.StructList[Transaction_EDU]

// NewTransaction_EDU creates a new list of Transaction_EDU.
func NewTransaction_EDU_List(s *capnp.Segment, sz int32) (Transaction_EDU_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return capnp.StructList[Transaction_EDU](l), err
}

// Transaction_EDU_Future is a wrapper for a Transaction_EDU promised by a client call.
type Transaction_EDU_Future struct{ *capnp.Future }

func (f Transaction_EDU_Future) Struct() (Transaction_EDU, error) {
	p, err := f.Future.Ptr()
	return Transaction_EDU(p.Struct()), err
}
func (p Transaction_EDU_Future) Content() JsonValue_Future {
	return JsonValue_Future{Future: p.Future.Field(1, nil)}
}

type Transaction_PDU capnp.Struct
type Transaction_PDU_roomVersion1 Transaction_PDU
type Transaction_PDU_roomVersion2 Transaction_PDU
type Transaction_PDU_roomVersion3 Transaction_PDU
type Transaction_PDU_roomVersion4 Transaction_PDU
type Transaction_PDU_roomVersion5 Transaction_PDU
type Transaction_PDU_roomVersion6 Transaction_PDU
type Transaction_PDU_roomVersion7 Transaction_PDU
type Transaction_PDU_roomVersion8 Transaction_PDU
type Transaction_PDU_roomVersion9 Transaction_PDU
type Transaction_PDU_roomVersion10 Transaction_PDU
type Transaction_PDU_roomVersion11 Transaction_PDU
type Transaction_PDU_Which uint16

const (
	Transaction_PDU_Which_roomVersion1  Transaction_PDU_Which = 0
	Transaction_PDU_Which_roomVersion2  Transaction_PDU_Which = 1
	Transaction_PDU_Which_roomVersion3  Transaction_PDU_Which = 2
	Transaction_PDU_Which_roomVersion4  Transaction_PDU_Which = 3
	Transaction_PDU_Which_roomVersion5  Transaction_PDU_Which = 4
	Transaction_PDU_Which_roomVersion6  Transaction_PDU_Which = 5
	Transaction_PDU_Which_roomVersion7  Transaction_PDU_Which = 6
	Transaction_PDU_Which_roomVersion8  Transaction_PDU_Which = 7
	Transaction_PDU_Which_roomVersion9  Transaction_PDU_Which = 8
	Transaction_PDU_Which_roomVersion10 Transaction_PDU_Which = 9
	Transaction_PDU_Which_roomVersion11 Transaction_PDU_Which = 10
)

func (w Transaction_PDU_Which) String() string {
	const s = "roomVersion1roomVersion2roomVersion3roomVersion4roomVersion5roomVersion6roomVersion7roomVersion8roomVersion9roomVersion10roomVersion11"
	switch w {
	case Transaction_PDU_Which_roomVersion1:
		return s[0:12]
	case Transaction_PDU_Which_roomVersion2:
		return s[12:24]
	case Transaction_PDU_Which_roomVersion3:
		return s[24:36]
	case Transaction_PDU_Which_roomVersion4:
		return s[36:48]
	case Transaction_PDU_Which_roomVersion5:
		return s[48:60]
	case Transaction_PDU_Which_roomVersion6:
		return s[60:72]
	case Transaction_PDU_Which_roomVersion7:
		return s[72:84]
	case Transaction_PDU_Which_roomVersion8:
		return s[84:96]
	case Transaction_PDU_Which_roomVersion9:
		return s[96:108]
	case Transaction_PDU_Which_roomVersion10:
		return s[108:121]
	case Transaction_PDU_Which_roomVersion11:
		return s[121:134]

	}
	return "Transaction_PDU_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// Transaction_PDU_TypeID is the unique identifier for the type Transaction_PDU.
const Transaction_PDU_TypeID = 0xb1beb572e4d306be

func NewTransaction_PDU(s *capnp.Segment) (Transaction_PDU, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 12})
	return Transaction_PDU(st), err
}

func NewRootTransaction_PDU(s *capnp.Segment) (Transaction_PDU, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 12})
	return Transaction_PDU(st), err
}

func ReadRootTransaction_PDU(msg *capnp.Message) (Transaction_PDU, error) {
	root, err := msg.Root()
	return Transaction_PDU(root.Struct()), err
}

func (s Transaction_PDU) String() string {
	str, _ := text.Marshal(0xb1beb572e4d306be, capnp.Struct(s))
	return str
}

func (s Transaction_PDU) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Transaction_PDU) DecodeFromPtr(p capnp.Ptr) Transaction_PDU {
	return Transaction_PDU(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Transaction_PDU) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}

func (s Transaction_PDU) Which() Transaction_PDU_Which {
	return Transaction_PDU_Which(capnp.Struct(s).Uint16(16))
}
func (s Transaction_PDU) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Transaction_PDU) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Transaction_PDU) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Transaction_PDU) RoomVersion1() Transaction_PDU_roomVersion1 {
	return Transaction_PDU_roomVersion1(s)
}

func (s Transaction_PDU) SetRoomVersion1() {
	capnp.Struct(s).SetUint16(16, 0)
}

func (s Transaction_PDU_roomVersion1) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Transaction_PDU_roomVersion1) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Transaction_PDU_roomVersion1) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Transaction_PDU_roomVersion1) Depth() uint64 {
	return capnp.Struct(s).Uint64(0)
}

func (s Transaction_PDU_roomVersion1) SetDepth(v uint64) {
	capnp.Struct(s).SetUint64(0, v)
}

func (s Transaction_PDU_roomVersion1) EventID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion1) HasEventID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Transaction_PDU_roomVersion1) EventIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion1) SetEventID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Transaction_PDU_roomVersion1) OriginServerTS() int64 {
	return int64(capnp.Struct(s).Uint64(8))
}

func (s Transaction_PDU_roomVersion1) SetOriginServerTS(v int64) {
	capnp.Struct(s).SetUint64(8, uint64(v))
}

func (s Transaction_PDU_roomVersion1) RoomID() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion1) HasRoomID() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Transaction_PDU_roomVersion1) RoomIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion1) SetRoomID(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s Transaction_PDU_roomVersion1) Sender() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion1) HasSender() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s Transaction_PDU_roomVersion1) SenderBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion1) SetSender(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

func (s Transaction_PDU_roomVersion1) Type() (string, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion1) HasType() bool {
	return capnp.Struct(s).HasPtr(3)
}

func (s Transaction_PDU_roomVersion1) TypeBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion1) SetType(v string) error {
	return capnp.Struct(s).SetText(3, v)
}

func (s Transaction_PDU_roomVersion1) Redacts() (string, error) {
	p, err := capnp.Struct(s).Ptr(4)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion1) HasRedacts() bool {
	return capnp.Struct(s).HasPtr(4)
}

func (s Transaction_PDU_roomVersion1) RedactsBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(4)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion1) SetRedacts(v string) error {
	return capnp.Struct(s).SetText(4, v)
}

func (s Transaction_PDU_roomVersion1) StateKey() (string, error) {
	p, err := capnp.Struct(s).Ptr(5)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion1) HasStateKey() bool {
	return capnp.Struct(s).HasPtr(5)
}

func (s Transaction_PDU_roomVersion1) StateKeyBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(5)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion1) SetStateKey(v string) error {
	return capnp.Struct(s).SetText(5, v)
}

func (s Transaction_PDU_roomVersion1) Content() (JsonValue, error) {
	p, err := capnp.Struct(s).Ptr(6)
	return JsonValue(p.Struct()), err
}

func (s Transaction_PDU_roomVersion1) HasContent() bool {
	return capnp.Struct(s).HasPtr(6)
}

func (s Transaction_PDU_roomVersion1) SetContent(v JsonValue) error {
	return capnp.Struct(s).SetPtr(6, capnp.Struct(v).ToPtr())
}

// NewContent sets the content field to a newly
// allocated JsonValue struct, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion1) NewContent() (JsonValue, error) {
	ss, err := NewJsonValue(capnp.Struct(s).Segment())
	if err != nil {
		return JsonValue{}, err
	}
	err = capnp.Struct(s).SetPtr(6, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Transaction_PDU_roomVersion1) AuthEvents() (Transaction_PDU_EventReference_List, error) {
	p, err := capnp.Struct(s).Ptr(7)
	return Transaction_PDU_EventReference_List(p.List()), err
}

func (s Transaction_PDU_roomVersion1) HasAuthEvents() bool {
	return capnp.Struct(s).HasPtr(7)
}

func (s Transaction_PDU_roomVersion1) SetAuthEvents(v Transaction_PDU_EventReference_List) error {
	return capnp.Struct(s).SetPtr(7, v.ToPtr())
}

// NewAuthEvents sets the authEvents field to a newly
// allocated Transaction_PDU_EventReference_List, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion1) NewAuthEvents(n int32) (Transaction_PDU_EventReference_List, error) {
	l, err := NewTransaction_PDU_EventReference_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return Transaction_PDU_EventReference_List{}, err
	}
	err = capnp.Struct(s).SetPtr(7, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion1) PrevEvents() (Transaction_PDU_EventReference_List, error) {
	p, err := capnp.Struct(s).Ptr(8)
	return Transaction_PDU_EventReference_List(p.List()), err
}

func (s Transaction_PDU_roomVersion1) HasPrevEvents() bool {
	return capnp.Struct(s).HasPtr(8)
}

func (s Transaction_PDU_roomVersion1) SetPrevEvents(v Transaction_PDU_EventReference_List) error {
	return capnp.Struct(s).SetPtr(8, v.ToPtr())
}

// NewPrevEvents sets the prevEvents field to a newly
// allocated Transaction_PDU_EventReference_List, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion1) NewPrevEvents(n int32) (Transaction_PDU_EventReference_List, error) {
	l, err := NewTransaction_PDU_EventReference_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return Transaction_PDU_EventReference_List{}, err
	}
	err = capnp.Struct(s).SetPtr(8, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion1) Hashes() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(9)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion1) HasHashes() bool {
	return capnp.Struct(s).HasPtr(9)
}

func (s Transaction_PDU_roomVersion1) SetHashes(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(9, v.ToPtr())
}

// NewHashes sets the hashes field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion1) NewHashes(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(9, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion1) Signatures() (Signature_List, error) {
	p, err := capnp.Struct(s).Ptr(10)
	return Signature_List(p.List()), err
}

func (s Transaction_PDU_roomVersion1) HasSignatures() bool {
	return capnp.Struct(s).HasPtr(10)
}

func (s Transaction_PDU_roomVersion1) SetSignatures(v Signature_List) error {
	return capnp.Struct(s).SetPtr(10, v.ToPtr())
}

// NewSignatures sets the signatures field to a newly
// allocated Signature_List, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion1) NewSignatures(n int32) (Signature_List, error) {
	l, err := NewSignature_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return Signature_List{}, err
	}
	err = capnp.Struct(s).SetPtr(10, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion1) Unsigned() (Transaction_PDU_Unsigned, error) {
	p, err := capnp.Struct(s).Ptr(11)
	return Transaction_PDU_Unsigned(p.Struct()), err
}

func (s Transaction_PDU_roomVersion1) HasUnsigned() bool {
	return capnp.Struct(s).HasPtr(11)
}

func (s Transaction_PDU_roomVersion1) SetUnsigned(v Transaction_PDU_Unsigned) error {
	return capnp.Struct(s).SetPtr(11, capnp.Struct(v).ToPtr())
}

// NewUnsigned sets the unsigned field to a newly
// allocated Transaction_PDU_Unsigned struct, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion1) NewUnsigned() (Transaction_PDU_Unsigned, error) {
	ss, err := NewTransaction_PDU_Unsigned(capnp.Struct(s).Segment())
	if err != nil {
		return Transaction_PDU_Unsigned{}, err
	}
	err = capnp.Struct(s).SetPtr(11, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Transaction_PDU) RoomVersion2() Transaction_PDU_roomVersion2 {
	return Transaction_PDU_roomVersion2(s)
}

func (s Transaction_PDU) SetRoomVersion2() {
	capnp.Struct(s).SetUint16(16, 1)
}

func (s Transaction_PDU_roomVersion2) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Transaction_PDU_roomVersion2) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Transaction_PDU_roomVersion2) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Transaction_PDU_roomVersion2) Depth() uint64 {
	return capnp.Struct(s).Uint64(0)
}

func (s Transaction_PDU_roomVersion2) SetDepth(v uint64) {
	capnp.Struct(s).SetUint64(0, v)
}

func (s Transaction_PDU_roomVersion2) EventID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion2) HasEventID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Transaction_PDU_roomVersion2) EventIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion2) SetEventID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Transaction_PDU_roomVersion2) OriginServerTS() int64 {
	return int64(capnp.Struct(s).Uint64(8))
}

func (s Transaction_PDU_roomVersion2) SetOriginServerTS(v int64) {
	capnp.Struct(s).SetUint64(8, uint64(v))
}

func (s Transaction_PDU_roomVersion2) RoomID() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion2) HasRoomID() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Transaction_PDU_roomVersion2) RoomIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion2) SetRoomID(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s Transaction_PDU_roomVersion2) Sender() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion2) HasSender() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s Transaction_PDU_roomVersion2) SenderBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion2) SetSender(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

func (s Transaction_PDU_roomVersion2) Type() (string, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion2) HasType() bool {
	return capnp.Struct(s).HasPtr(3)
}

func (s Transaction_PDU_roomVersion2) TypeBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion2) SetType(v string) error {
	return capnp.Struct(s).SetText(3, v)
}

func (s Transaction_PDU_roomVersion2) Redacts() (string, error) {
	p, err := capnp.Struct(s).Ptr(4)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion2) HasRedacts() bool {
	return capnp.Struct(s).HasPtr(4)
}

func (s Transaction_PDU_roomVersion2) RedactsBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(4)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion2) SetRedacts(v string) error {
	return capnp.Struct(s).SetText(4, v)
}

func (s Transaction_PDU_roomVersion2) StateKey() (string, error) {
	p, err := capnp.Struct(s).Ptr(5)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion2) HasStateKey() bool {
	return capnp.Struct(s).HasPtr(5)
}

func (s Transaction_PDU_roomVersion2) StateKeyBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(5)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion2) SetStateKey(v string) error {
	return capnp.Struct(s).SetText(5, v)
}

func (s Transaction_PDU_roomVersion2) Content() (JsonValue, error) {
	p, err := capnp.Struct(s).Ptr(6)
	return JsonValue(p.Struct()), err
}

func (s Transaction_PDU_roomVersion2) HasContent() bool {
	return capnp.Struct(s).HasPtr(6)
}

func (s Transaction_PDU_roomVersion2) SetContent(v JsonValue) error {
	return capnp.Struct(s).SetPtr(6, capnp.Struct(v).ToPtr())
}

// NewContent sets the content field to a newly
// allocated JsonValue struct, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion2) NewContent() (JsonValue, error) {
	ss, err := NewJsonValue(capnp.Struct(s).Segment())
	if err != nil {
		return JsonValue{}, err
	}
	err = capnp.Struct(s).SetPtr(6, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Transaction_PDU_roomVersion2) AuthEvents() (Transaction_PDU_EventReference_List, error) {
	p, err := capnp.Struct(s).Ptr(7)
	return Transaction_PDU_EventReference_List(p.List()), err
}

func (s Transaction_PDU_roomVersion2) HasAuthEvents() bool {
	return capnp.Struct(s).HasPtr(7)
}

func (s Transaction_PDU_roomVersion2) SetAuthEvents(v Transaction_PDU_EventReference_List) error {
	return capnp.Struct(s).SetPtr(7, v.ToPtr())
}

// NewAuthEvents sets the authEvents field to a newly
// allocated Transaction_PDU_EventReference_List, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion2) NewAuthEvents(n int32) (Transaction_PDU_EventReference_List, error) {
	l, err := NewTransaction_PDU_EventReference_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return Transaction_PDU_EventReference_List{}, err
	}
	err = capnp.Struct(s).SetPtr(7, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion2) PrevEvents() (Transaction_PDU_EventReference_List, error) {
	p, err := capnp.Struct(s).Ptr(8)
	return Transaction_PDU_EventReference_List(p.List()), err
}

func (s Transaction_PDU_roomVersion2) HasPrevEvents() bool {
	return capnp.Struct(s).HasPtr(8)
}

func (s Transaction_PDU_roomVersion2) SetPrevEvents(v Transaction_PDU_EventReference_List) error {
	return capnp.Struct(s).SetPtr(8, v.ToPtr())
}

// NewPrevEvents sets the prevEvents field to a newly
// allocated Transaction_PDU_EventReference_List, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion2) NewPrevEvents(n int32) (Transaction_PDU_EventReference_List, error) {
	l, err := NewTransaction_PDU_EventReference_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return Transaction_PDU_EventReference_List{}, err
	}
	err = capnp.Struct(s).SetPtr(8, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion2) Hashes() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(9)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion2) HasHashes() bool {
	return capnp.Struct(s).HasPtr(9)
}

func (s Transaction_PDU_roomVersion2) SetHashes(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(9, v.ToPtr())
}

// NewHashes sets the hashes field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion2) NewHashes(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(9, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion2) Signatures() (Signature_List, error) {
	p, err := capnp.Struct(s).Ptr(10)
	return Signature_List(p.List()), err
}

func (s Transaction_PDU_roomVersion2) HasSignatures() bool {
	return capnp.Struct(s).HasPtr(10)
}

func (s Transaction_PDU_roomVersion2) SetSignatures(v Signature_List) error {
	return capnp.Struct(s).SetPtr(10, v.ToPtr())
}

// NewSignatures sets the signatures field to a newly
// allocated Signature_List, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion2) NewSignatures(n int32) (Signature_List, error) {
	l, err := NewSignature_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return Signature_List{}, err
	}
	err = capnp.Struct(s).SetPtr(10, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion2) Unsigned() (Transaction_PDU_Unsigned, error) {
	p, err := capnp.Struct(s).Ptr(11)
	return Transaction_PDU_Unsigned(p.Struct()), err
}

func (s Transaction_PDU_roomVersion2) HasUnsigned() bool {
	return capnp.Struct(s).HasPtr(11)
}

func (s Transaction_PDU_roomVersion2) SetUnsigned(v Transaction_PDU_Unsigned) error {
	return capnp.Struct(s).SetPtr(11, capnp.Struct(v).ToPtr())
}

// NewUnsigned sets the unsigned field to a newly
// allocated Transaction_PDU_Unsigned struct, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion2) NewUnsigned() (Transaction_PDU_Unsigned, error) {
	ss, err := NewTransaction_PDU_Unsigned(capnp.Struct(s).Segment())
	if err != nil {
		return Transaction_PDU_Unsigned{}, err
	}
	err = capnp.Struct(s).SetPtr(11, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Transaction_PDU) RoomVersion3() Transaction_PDU_roomVersion3 {
	return Transaction_PDU_roomVersion3(s)
}

func (s Transaction_PDU) SetRoomVersion3() {
	capnp.Struct(s).SetUint16(16, 2)
}

func (s Transaction_PDU_roomVersion3) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Transaction_PDU_roomVersion3) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Transaction_PDU_roomVersion3) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Transaction_PDU_roomVersion3) Depth() uint64 {
	return capnp.Struct(s).Uint64(0)
}

func (s Transaction_PDU_roomVersion3) SetDepth(v uint64) {
	capnp.Struct(s).SetUint64(0, v)
}

func (s Transaction_PDU_roomVersion3) OriginServerTS() int64 {
	return int64(capnp.Struct(s).Uint64(8))
}

func (s Transaction_PDU_roomVersion3) SetOriginServerTS(v int64) {
	capnp.Struct(s).SetUint64(8, uint64(v))
}

func (s Transaction_PDU_roomVersion3) RoomID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion3) HasRoomID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Transaction_PDU_roomVersion3) RoomIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion3) SetRoomID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Transaction_PDU_roomVersion3) Sender() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion3) HasSender() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Transaction_PDU_roomVersion3) SenderBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion3) SetSender(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s Transaction_PDU_roomVersion3) Type() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion3) HasType() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s Transaction_PDU_roomVersion3) TypeBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion3) SetType(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

func (s Transaction_PDU_roomVersion3) Redacts() (string, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion3) HasRedacts() bool {
	return capnp.Struct(s).HasPtr(3)
}

func (s Transaction_PDU_roomVersion3) RedactsBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion3) SetRedacts(v string) error {
	return capnp.Struct(s).SetText(3, v)
}

func (s Transaction_PDU_roomVersion3) StateKey() (string, error) {
	p, err := capnp.Struct(s).Ptr(4)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion3) HasStateKey() bool {
	return capnp.Struct(s).HasPtr(4)
}

func (s Transaction_PDU_roomVersion3) StateKeyBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(4)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion3) SetStateKey(v string) error {
	return capnp.Struct(s).SetText(4, v)
}

func (s Transaction_PDU_roomVersion3) Content() (JsonValue, error) {
	p, err := capnp.Struct(s).Ptr(5)
	return JsonValue(p.Struct()), err
}

func (s Transaction_PDU_roomVersion3) HasContent() bool {
	return capnp.Struct(s).HasPtr(5)
}

func (s Transaction_PDU_roomVersion3) SetContent(v JsonValue) error {
	return capnp.Struct(s).SetPtr(5, capnp.Struct(v).ToPtr())
}

// NewContent sets the content field to a newly
// allocated JsonValue struct, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion3) NewContent() (JsonValue, error) {
	ss, err := NewJsonValue(capnp.Struct(s).Segment())
	if err != nil {
		return JsonValue{}, err
	}
	err = capnp.Struct(s).SetPtr(5, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Transaction_PDU_roomVersion3) AuthEvents() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(6)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion3) HasAuthEvents() bool {
	return capnp.Struct(s).HasPtr(6)
}

func (s Transaction_PDU_roomVersion3) SetAuthEvents(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(6, v.ToPtr())
}

// NewAuthEvents sets the authEvents field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion3) NewAuthEvents(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(6, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion3) PrevEvents() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(7)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion3) HasPrevEvents() bool {
	return capnp.Struct(s).HasPtr(7)
}

func (s Transaction_PDU_roomVersion3) SetPrevEvents(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(7, v.ToPtr())
}

// NewPrevEvents sets the prevEvents field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion3) NewPrevEvents(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(7, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion3) Hashes() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(8)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion3) HasHashes() bool {
	return capnp.Struct(s).HasPtr(8)
}

func (s Transaction_PDU_roomVersion3) SetHashes(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(8, v.ToPtr())
}

// NewHashes sets the hashes field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion3) NewHashes(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(8, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion3) Signatures() (Signature_List, error) {
	p, err := capnp.Struct(s).Ptr(9)
	return Signature_List(p.List()), err
}

func (s Transaction_PDU_roomVersion3) HasSignatures() bool {
	return capnp.Struct(s).HasPtr(9)
}

func (s Transaction_PDU_roomVersion3) SetSignatures(v Signature_List) error {
	return capnp.Struct(s).SetPtr(9, v.ToPtr())
}

// NewSignatures sets the signatures field to a newly
// allocated Signature_List, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion3) NewSignatures(n int32) (Signature_List, error) {
	l, err := NewSignature_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return Signature_List{}, err
	}
	err = capnp.Struct(s).SetPtr(9, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion3) Unsigned() (Transaction_PDU_Unsigned, error) {
	p, err := capnp.Struct(s).Ptr(10)
	return Transaction_PDU_Unsigned(p.Struct()), err
}

func (s Transaction_PDU_roomVersion3) HasUnsigned() bool {
	return capnp.Struct(s).HasPtr(10)
}

func (s Transaction_PDU_roomVersion3) SetUnsigned(v Transaction_PDU_Unsigned) error {
	return capnp.Struct(s).SetPtr(10, capnp.Struct(v).ToPtr())
}

// NewUnsigned sets the unsigned field to a newly
// allocated Transaction_PDU_Unsigned struct, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion3) NewUnsigned() (Transaction_PDU_Unsigned, error) {
	ss, err := NewTransaction_PDU_Unsigned(capnp.Struct(s).Segment())
	if err != nil {
		return Transaction_PDU_Unsigned{}, err
	}
	err = capnp.Struct(s).SetPtr(10, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Transaction_PDU) RoomVersion4() Transaction_PDU_roomVersion4 {
	return Transaction_PDU_roomVersion4(s)
}

func (s Transaction_PDU) SetRoomVersion4() {
	capnp.Struct(s).SetUint16(16, 3)
}

func (s Transaction_PDU_roomVersion4) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Transaction_PDU_roomVersion4) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Transaction_PDU_roomVersion4) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Transaction_PDU_roomVersion4) Depth() uint64 {
	return capnp.Struct(s).Uint64(0)
}

func (s Transaction_PDU_roomVersion4) SetDepth(v uint64) {
	capnp.Struct(s).SetUint64(0, v)
}

func (s Transaction_PDU_roomVersion4) OriginServerTS() int64 {
	return int64(capnp.Struct(s).Uint64(8))
}

func (s Transaction_PDU_roomVersion4) SetOriginServerTS(v int64) {
	capnp.Struct(s).SetUint64(8, uint64(v))
}

func (s Transaction_PDU_roomVersion4) RoomID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion4) HasRoomID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Transaction_PDU_roomVersion4) RoomIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion4) SetRoomID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Transaction_PDU_roomVersion4) Sender() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion4) HasSender() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Transaction_PDU_roomVersion4) SenderBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion4) SetSender(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s Transaction_PDU_roomVersion4) Type() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion4) HasType() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s Transaction_PDU_roomVersion4) TypeBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion4) SetType(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

func (s Transaction_PDU_roomVersion4) Redacts() (string, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion4) HasRedacts() bool {
	return capnp.Struct(s).HasPtr(3)
}

func (s Transaction_PDU_roomVersion4) RedactsBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion4) SetRedacts(v string) error {
	return capnp.Struct(s).SetText(3, v)
}

func (s Transaction_PDU_roomVersion4) StateKey() (string, error) {
	p, err := capnp.Struct(s).Ptr(4)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion4) HasStateKey() bool {
	return capnp.Struct(s).HasPtr(4)
}

func (s Transaction_PDU_roomVersion4) StateKeyBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(4)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion4) SetStateKey(v string) error {
	return capnp.Struct(s).SetText(4, v)
}

func (s Transaction_PDU_roomVersion4) Content() (JsonValue, error) {
	p, err := capnp.Struct(s).Ptr(5)
	return JsonValue(p.Struct()), err
}

func (s Transaction_PDU_roomVersion4) HasContent() bool {
	return capnp.Struct(s).HasPtr(5)
}

func (s Transaction_PDU_roomVersion4) SetContent(v JsonValue) error {
	return capnp.Struct(s).SetPtr(5, capnp.Struct(v).ToPtr())
}

// NewContent sets the content field to a newly
// allocated JsonValue struct, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion4) NewContent() (JsonValue, error) {
	ss, err := NewJsonValue(capnp.Struct(s).Segment())
	if err != nil {
		return JsonValue{}, err
	}
	err = capnp.Struct(s).SetPtr(5, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Transaction_PDU_roomVersion4) AuthEvents() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(6)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion4) HasAuthEvents() bool {
	return capnp.Struct(s).HasPtr(6)
}

func (s Transaction_PDU_roomVersion4) SetAuthEvents(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(6, v.ToPtr())
}

// NewAuthEvents sets the authEvents field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion4) NewAuthEvents(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(6, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion4) PrevEvents() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(7)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion4) HasPrevEvents() bool {
	return capnp.Struct(s).HasPtr(7)
}

func (s Transaction_PDU_roomVersion4) SetPrevEvents(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(7, v.ToPtr())
}

// NewPrevEvents sets the prevEvents field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion4) NewPrevEvents(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(7, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion4) Hashes() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(8)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion4) HasHashes() bool {
	return capnp.Struct(s).HasPtr(8)
}

func (s Transaction_PDU_roomVersion4) SetHashes(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(8, v.ToPtr())
}

// NewHashes sets the hashes field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion4) NewHashes(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(8, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion4) Signatures() (Signature_List, error) {
	p, err := capnp.Struct(s).Ptr(9)
	return Signature_List(p.List()), err
}

func (s Transaction_PDU_roomVersion4) HasSignatures() bool {
	return capnp.Struct(s).HasPtr(9)
}

func (s Transaction_PDU_roomVersion4) SetSignatures(v Signature_List) error {
	return capnp.Struct(s).SetPtr(9, v.ToPtr())
}

// NewSignatures sets the signatures field to a newly
// allocated Signature_List, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion4) NewSignatures(n int32) (Signature_List, error) {
	l, err := NewSignature_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return Signature_List{}, err
	}
	err = capnp.Struct(s).SetPtr(9, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion4) Unsigned() (Transaction_PDU_Unsigned, error) {
	p, err := capnp.Struct(s).Ptr(10)
	return Transaction_PDU_Unsigned(p.Struct()), err
}

func (s Transaction_PDU_roomVersion4) HasUnsigned() bool {
	return capnp.Struct(s).HasPtr(10)
}

func (s Transaction_PDU_roomVersion4) SetUnsigned(v Transaction_PDU_Unsigned) error {
	return capnp.Struct(s).SetPtr(10, capnp.Struct(v).ToPtr())
}

// NewUnsigned sets the unsigned field to a newly
// allocated Transaction_PDU_Unsigned struct, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion4) NewUnsigned() (Transaction_PDU_Unsigned, error) {
	ss, err := NewTransaction_PDU_Unsigned(capnp.Struct(s).Segment())
	if err != nil {
		return Transaction_PDU_Unsigned{}, err
	}
	err = capnp.Struct(s).SetPtr(10, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Transaction_PDU) RoomVersion5() Transaction_PDU_roomVersion5 {
	return Transaction_PDU_roomVersion5(s)
}

func (s Transaction_PDU) SetRoomVersion5() {
	capnp.Struct(s).SetUint16(16, 4)
}

func (s Transaction_PDU_roomVersion5) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Transaction_PDU_roomVersion5) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Transaction_PDU_roomVersion5) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Transaction_PDU_roomVersion5) Depth() uint64 {
	return capnp.Struct(s).Uint64(0)
}

func (s Transaction_PDU_roomVersion5) SetDepth(v uint64) {
	capnp.Struct(s).SetUint64(0, v)
}

func (s Transaction_PDU_roomVersion5) OriginServerTS() int64 {
	return int64(capnp.Struct(s).Uint64(8))
}

func (s Transaction_PDU_roomVersion5) SetOriginServerTS(v int64) {
	capnp.Struct(s).SetUint64(8, uint64(v))
}

func (s Transaction_PDU_roomVersion5) RoomID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion5) HasRoomID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Transaction_PDU_roomVersion5) RoomIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion5) SetRoomID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Transaction_PDU_roomVersion5) Sender() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion5) HasSender() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Transaction_PDU_roomVersion5) SenderBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion5) SetSender(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s Transaction_PDU_roomVersion5) Type() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion5) HasType() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s Transaction_PDU_roomVersion5) TypeBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion5) SetType(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

func (s Transaction_PDU_roomVersion5) Redacts() (string, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion5) HasRedacts() bool {
	return capnp.Struct(s).HasPtr(3)
}

func (s Transaction_PDU_roomVersion5) RedactsBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion5) SetRedacts(v string) error {
	return capnp.Struct(s).SetText(3, v)
}

func (s Transaction_PDU_roomVersion5) StateKey() (string, error) {
	p, err := capnp.Struct(s).Ptr(4)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion5) HasStateKey() bool {
	return capnp.Struct(s).HasPtr(4)
}

func (s Transaction_PDU_roomVersion5) StateKeyBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(4)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion5) SetStateKey(v string) error {
	return capnp.Struct(s).SetText(4, v)
}

func (s Transaction_PDU_roomVersion5) Content() (JsonValue, error) {
	p, err := capnp.Struct(s).Ptr(5)
	return JsonValue(p.Struct()), err
}

func (s Transaction_PDU_roomVersion5) HasContent() bool {
	return capnp.Struct(s).HasPtr(5)
}

func (s Transaction_PDU_roomVersion5) SetContent(v JsonValue) error {
	return capnp.Struct(s).SetPtr(5, capnp.Struct(v).ToPtr())
}

// NewContent sets the content field to a newly
// allocated JsonValue struct, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion5) NewContent() (JsonValue, error) {
	ss, err := NewJsonValue(capnp.Struct(s).Segment())
	if err != nil {
		return JsonValue{}, err
	}
	err = capnp.Struct(s).SetPtr(5, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Transaction_PDU_roomVersion5) AuthEvents() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(6)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion5) HasAuthEvents() bool {
	return capnp.Struct(s).HasPtr(6)
}

func (s Transaction_PDU_roomVersion5) SetAuthEvents(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(6, v.ToPtr())
}

// NewAuthEvents sets the authEvents field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion5) NewAuthEvents(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(6, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion5) PrevEvents() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(7)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion5) HasPrevEvents() bool {
	return capnp.Struct(s).HasPtr(7)
}

func (s Transaction_PDU_roomVersion5) SetPrevEvents(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(7, v.ToPtr())
}

// NewPrevEvents sets the prevEvents field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion5) NewPrevEvents(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(7, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion5) Hashes() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(8)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion5) HasHashes() bool {
	return capnp.Struct(s).HasPtr(8)
}

func (s Transaction_PDU_roomVersion5) SetHashes(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(8, v.ToPtr())
}

// NewHashes sets the hashes field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion5) NewHashes(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(8, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion5) Signatures() (Signature_List, error) {
	p, err := capnp.Struct(s).Ptr(9)
	return Signature_List(p.List()), err
}

func (s Transaction_PDU_roomVersion5) HasSignatures() bool {
	return capnp.Struct(s).HasPtr(9)
}

func (s Transaction_PDU_roomVersion5) SetSignatures(v Signature_List) error {
	return capnp.Struct(s).SetPtr(9, v.ToPtr())
}

// NewSignatures sets the signatures field to a newly
// allocated Signature_List, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion5) NewSignatures(n int32) (Signature_List, error) {
	l, err := NewSignature_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return Signature_List{}, err
	}
	err = capnp.Struct(s).SetPtr(9, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion5) Unsigned() (Transaction_PDU_Unsigned, error) {
	p, err := capnp.Struct(s).Ptr(10)
	return Transaction_PDU_Unsigned(p.Struct()), err
}

func (s Transaction_PDU_roomVersion5) HasUnsigned() bool {
	return capnp.Struct(s).HasPtr(10)
}

func (s Transaction_PDU_roomVersion5) SetUnsigned(v Transaction_PDU_Unsigned) error {
	return capnp.Struct(s).SetPtr(10, capnp.Struct(v).ToPtr())
}

// NewUnsigned sets the unsigned field to a newly
// allocated Transaction_PDU_Unsigned struct, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion5) NewUnsigned() (Transaction_PDU_Unsigned, error) {
	ss, err := NewTransaction_PDU_Unsigned(capnp.Struct(s).Segment())
	if err != nil {
		return Transaction_PDU_Unsigned{}, err
	}
	err = capnp.Struct(s).SetPtr(10, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Transaction_PDU) RoomVersion6() Transaction_PDU_roomVersion6 {
	return Transaction_PDU_roomVersion6(s)
}

func (s Transaction_PDU) SetRoomVersion6() {
	capnp.Struct(s).SetUint16(16, 5)
}

func (s Transaction_PDU_roomVersion6) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Transaction_PDU_roomVersion6) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Transaction_PDU_roomVersion6) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Transaction_PDU_roomVersion6) Depth() uint64 {
	return capnp.Struct(s).Uint64(0)
}

func (s Transaction_PDU_roomVersion6) SetDepth(v uint64) {
	capnp.Struct(s).SetUint64(0, v)
}

func (s Transaction_PDU_roomVersion6) OriginServerTS() int64 {
	return int64(capnp.Struct(s).Uint64(8))
}

func (s Transaction_PDU_roomVersion6) SetOriginServerTS(v int64) {
	capnp.Struct(s).SetUint64(8, uint64(v))
}

func (s Transaction_PDU_roomVersion6) RoomID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion6) HasRoomID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Transaction_PDU_roomVersion6) RoomIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion6) SetRoomID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Transaction_PDU_roomVersion6) Sender() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion6) HasSender() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Transaction_PDU_roomVersion6) SenderBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion6) SetSender(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s Transaction_PDU_roomVersion6) Type() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion6) HasType() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s Transaction_PDU_roomVersion6) TypeBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion6) SetType(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

func (s Transaction_PDU_roomVersion6) Redacts() (string, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion6) HasRedacts() bool {
	return capnp.Struct(s).HasPtr(3)
}

func (s Transaction_PDU_roomVersion6) RedactsBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion6) SetRedacts(v string) error {
	return capnp.Struct(s).SetText(3, v)
}

func (s Transaction_PDU_roomVersion6) StateKey() (string, error) {
	p, err := capnp.Struct(s).Ptr(4)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion6) HasStateKey() bool {
	return capnp.Struct(s).HasPtr(4)
}

func (s Transaction_PDU_roomVersion6) StateKeyBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(4)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion6) SetStateKey(v string) error {
	return capnp.Struct(s).SetText(4, v)
}

func (s Transaction_PDU_roomVersion6) Content() (JsonValue, error) {
	p, err := capnp.Struct(s).Ptr(5)
	return JsonValue(p.Struct()), err
}

func (s Transaction_PDU_roomVersion6) HasContent() bool {
	return capnp.Struct(s).HasPtr(5)
}

func (s Transaction_PDU_roomVersion6) SetContent(v JsonValue) error {
	return capnp.Struct(s).SetPtr(5, capnp.Struct(v).ToPtr())
}

// NewContent sets the content field to a newly
// allocated JsonValue struct, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion6) NewContent() (JsonValue, error) {
	ss, err := NewJsonValue(capnp.Struct(s).Segment())
	if err != nil {
		return JsonValue{}, err
	}
	err = capnp.Struct(s).SetPtr(5, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Transaction_PDU_roomVersion6) AuthEvents() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(6)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion6) HasAuthEvents() bool {
	return capnp.Struct(s).HasPtr(6)
}

func (s Transaction_PDU_roomVersion6) SetAuthEvents(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(6, v.ToPtr())
}

// NewAuthEvents sets the authEvents field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion6) NewAuthEvents(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(6, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion6) PrevEvents() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(7)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion6) HasPrevEvents() bool {
	return capnp.Struct(s).HasPtr(7)
}

func (s Transaction_PDU_roomVersion6) SetPrevEvents(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(7, v.ToPtr())
}

// NewPrevEvents sets the prevEvents field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion6) NewPrevEvents(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(7, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion6) Hashes() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(8)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion6) HasHashes() bool {
	return capnp.Struct(s).HasPtr(8)
}

func (s Transaction_PDU_roomVersion6) SetHashes(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(8, v.ToPtr())
}

// NewHashes sets the hashes field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion6) NewHashes(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(8, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion6) Signatures() (Signature_List, error) {
	p, err := capnp.Struct(s).Ptr(9)
	return Signature_List(p.List()), err
}

func (s Transaction_PDU_roomVersion6) HasSignatures() bool {
	return capnp.Struct(s).HasPtr(9)
}

func (s Transaction_PDU_roomVersion6) SetSignatures(v Signature_List) error {
	return capnp.Struct(s).SetPtr(9, v.ToPtr())
}

// NewSignatures sets the signatures field to a newly
// allocated Signature_List, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion6) NewSignatures(n int32) (Signature_List, error) {
	l, err := NewSignature_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return Signature_List{}, err
	}
	err = capnp.Struct(s).SetPtr(9, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion6) Unsigned() (Transaction_PDU_Unsigned, error) {
	p, err := capnp.Struct(s).Ptr(10)
	return Transaction_PDU_Unsigned(p.Struct()), err
}

func (s Transaction_PDU_roomVersion6) HasUnsigned() bool {
	return capnp.Struct(s).HasPtr(10)
}

func (s Transaction_PDU_roomVersion6) SetUnsigned(v Transaction_PDU_Unsigned) error {
	return capnp.Struct(s).SetPtr(10, capnp.Struct(v).ToPtr())
}

// NewUnsigned sets the unsigned field to a newly
// allocated Transaction_PDU_Unsigned struct, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion6) NewUnsigned() (Transaction_PDU_Unsigned, error) {
	ss, err := NewTransaction_PDU_Unsigned(capnp.Struct(s).Segment())
	if err != nil {
		return Transaction_PDU_Unsigned{}, err
	}
	err = capnp.Struct(s).SetPtr(10, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Transaction_PDU) RoomVersion7() Transaction_PDU_roomVersion7 {
	return Transaction_PDU_roomVersion7(s)
}

func (s Transaction_PDU) SetRoomVersion7() {
	capnp.Struct(s).SetUint16(16, 6)
}

func (s Transaction_PDU_roomVersion7) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Transaction_PDU_roomVersion7) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Transaction_PDU_roomVersion7) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Transaction_PDU_roomVersion7) Depth() uint64 {
	return capnp.Struct(s).Uint64(0)
}

func (s Transaction_PDU_roomVersion7) SetDepth(v uint64) {
	capnp.Struct(s).SetUint64(0, v)
}

func (s Transaction_PDU_roomVersion7) OriginServerTS() int64 {
	return int64(capnp.Struct(s).Uint64(8))
}

func (s Transaction_PDU_roomVersion7) SetOriginServerTS(v int64) {
	capnp.Struct(s).SetUint64(8, uint64(v))
}

func (s Transaction_PDU_roomVersion7) RoomID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion7) HasRoomID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Transaction_PDU_roomVersion7) RoomIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion7) SetRoomID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Transaction_PDU_roomVersion7) Sender() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion7) HasSender() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Transaction_PDU_roomVersion7) SenderBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion7) SetSender(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s Transaction_PDU_roomVersion7) Type() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion7) HasType() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s Transaction_PDU_roomVersion7) TypeBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion7) SetType(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

func (s Transaction_PDU_roomVersion7) Redacts() (string, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion7) HasRedacts() bool {
	return capnp.Struct(s).HasPtr(3)
}

func (s Transaction_PDU_roomVersion7) RedactsBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion7) SetRedacts(v string) error {
	return capnp.Struct(s).SetText(3, v)
}

func (s Transaction_PDU_roomVersion7) StateKey() (string, error) {
	p, err := capnp.Struct(s).Ptr(4)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion7) HasStateKey() bool {
	return capnp.Struct(s).HasPtr(4)
}

func (s Transaction_PDU_roomVersion7) StateKeyBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(4)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion7) SetStateKey(v string) error {
	return capnp.Struct(s).SetText(4, v)
}

func (s Transaction_PDU_roomVersion7) Content() (JsonValue, error) {
	p, err := capnp.Struct(s).Ptr(5)
	return JsonValue(p.Struct()), err
}

func (s Transaction_PDU_roomVersion7) HasContent() bool {
	return capnp.Struct(s).HasPtr(5)
}

func (s Transaction_PDU_roomVersion7) SetContent(v JsonValue) error {
	return capnp.Struct(s).SetPtr(5, capnp.Struct(v).ToPtr())
}

// NewContent sets the content field to a newly
// allocated JsonValue struct, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion7) NewContent() (JsonValue, error) {
	ss, err := NewJsonValue(capnp.Struct(s).Segment())
	if err != nil {
		return JsonValue{}, err
	}
	err = capnp.Struct(s).SetPtr(5, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Transaction_PDU_roomVersion7) AuthEvents() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(6)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion7) HasAuthEvents() bool {
	return capnp.Struct(s).HasPtr(6)
}

func (s Transaction_PDU_roomVersion7) SetAuthEvents(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(6, v.ToPtr())
}

// NewAuthEvents sets the authEvents field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion7) NewAuthEvents(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(6, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion7) PrevEvents() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(7)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion7) HasPrevEvents() bool {
	return capnp.Struct(s).HasPtr(7)
}

func (s Transaction_PDU_roomVersion7) SetPrevEvents(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(7, v.ToPtr())
}

// NewPrevEvents sets the prevEvents field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion7) NewPrevEvents(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(7, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion7) Hashes() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(8)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion7) HasHashes() bool {
	return capnp.Struct(s).HasPtr(8)
}

func (s Transaction_PDU_roomVersion7) SetHashes(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(8, v.ToPtr())
}

// NewHashes sets the hashes field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion7) NewHashes(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(8, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion7) Signatures() (Signature_List, error) {
	p, err := capnp.Struct(s).Ptr(9)
	return Signature_List(p.List()), err
}

func (s Transaction_PDU_roomVersion7) HasSignatures() bool {
	return capnp.Struct(s).HasPtr(9)
}

func (s Transaction_PDU_roomVersion7) SetSignatures(v Signature_List) error {
	return capnp.Struct(s).SetPtr(9, v.ToPtr())
}

// NewSignatures sets the signatures field to a newly
// allocated Signature_List, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion7) NewSignatures(n int32) (Signature_List, error) {
	l, err := NewSignature_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return Signature_List{}, err
	}
	err = capnp.Struct(s).SetPtr(9, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion7) Unsigned() (Transaction_PDU_Unsigned, error) {
	p, err := capnp.Struct(s).Ptr(10)
	return Transaction_PDU_Unsigned(p.Struct()), err
}

func (s Transaction_PDU_roomVersion7) HasUnsigned() bool {
	return capnp.Struct(s).HasPtr(10)
}

func (s Transaction_PDU_roomVersion7) SetUnsigned(v Transaction_PDU_Unsigned) error {
	return capnp.Struct(s).SetPtr(10, capnp.Struct(v).ToPtr())
}

// NewUnsigned sets the unsigned field to a newly
// allocated Transaction_PDU_Unsigned struct, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion7) NewUnsigned() (Transaction_PDU_Unsigned, error) {
	ss, err := NewTransaction_PDU_Unsigned(capnp.Struct(s).Segment())
	if err != nil {
		return Transaction_PDU_Unsigned{}, err
	}
	err = capnp.Struct(s).SetPtr(10, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Transaction_PDU) RoomVersion8() Transaction_PDU_roomVersion8 {
	return Transaction_PDU_roomVersion8(s)
}

func (s Transaction_PDU) SetRoomVersion8() {
	capnp.Struct(s).SetUint16(16, 7)
}

func (s Transaction_PDU_roomVersion8) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Transaction_PDU_roomVersion8) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Transaction_PDU_roomVersion8) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Transaction_PDU_roomVersion8) Depth() uint64 {
	return capnp.Struct(s).Uint64(0)
}

func (s Transaction_PDU_roomVersion8) SetDepth(v uint64) {
	capnp.Struct(s).SetUint64(0, v)
}

func (s Transaction_PDU_roomVersion8) OriginServerTS() int64 {
	return int64(capnp.Struct(s).Uint64(8))
}

func (s Transaction_PDU_roomVersion8) SetOriginServerTS(v int64) {
	capnp.Struct(s).SetUint64(8, uint64(v))
}

func (s Transaction_PDU_roomVersion8) RoomID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion8) HasRoomID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Transaction_PDU_roomVersion8) RoomIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion8) SetRoomID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Transaction_PDU_roomVersion8) Sender() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion8) HasSender() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Transaction_PDU_roomVersion8) SenderBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion8) SetSender(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s Transaction_PDU_roomVersion8) Type() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion8) HasType() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s Transaction_PDU_roomVersion8) TypeBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion8) SetType(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

func (s Transaction_PDU_roomVersion8) Redacts() (string, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion8) HasRedacts() bool {
	return capnp.Struct(s).HasPtr(3)
}

func (s Transaction_PDU_roomVersion8) RedactsBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion8) SetRedacts(v string) error {
	return capnp.Struct(s).SetText(3, v)
}

func (s Transaction_PDU_roomVersion8) StateKey() (string, error) {
	p, err := capnp.Struct(s).Ptr(4)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion8) HasStateKey() bool {
	return capnp.Struct(s).HasPtr(4)
}

func (s Transaction_PDU_roomVersion8) StateKeyBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(4)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion8) SetStateKey(v string) error {
	return capnp.Struct(s).SetText(4, v)
}

func (s Transaction_PDU_roomVersion8) Content() (JsonValue, error) {
	p, err := capnp.Struct(s).Ptr(5)
	return JsonValue(p.Struct()), err
}

func (s Transaction_PDU_roomVersion8) HasContent() bool {
	return capnp.Struct(s).HasPtr(5)
}

func (s Transaction_PDU_roomVersion8) SetContent(v JsonValue) error {
	return capnp.Struct(s).SetPtr(5, capnp.Struct(v).ToPtr())
}

// NewContent sets the content field to a newly
// allocated JsonValue struct, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion8) NewContent() (JsonValue, error) {
	ss, err := NewJsonValue(capnp.Struct(s).Segment())
	if err != nil {
		return JsonValue{}, err
	}
	err = capnp.Struct(s).SetPtr(5, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Transaction_PDU_roomVersion8) AuthEvents() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(6)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion8) HasAuthEvents() bool {
	return capnp.Struct(s).HasPtr(6)
}

func (s Transaction_PDU_roomVersion8) SetAuthEvents(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(6, v.ToPtr())
}

// NewAuthEvents sets the authEvents field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion8) NewAuthEvents(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(6, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion8) PrevEvents() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(7)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion8) HasPrevEvents() bool {
	return capnp.Struct(s).HasPtr(7)
}

func (s Transaction_PDU_roomVersion8) SetPrevEvents(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(7, v.ToPtr())
}

// NewPrevEvents sets the prevEvents field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion8) NewPrevEvents(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(7, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion8) Hashes() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(8)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion8) HasHashes() bool {
	return capnp.Struct(s).HasPtr(8)
}

func (s Transaction_PDU_roomVersion8) SetHashes(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(8, v.ToPtr())
}

// NewHashes sets the hashes field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion8) NewHashes(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(8, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion8) Signatures() (Signature_List, error) {
	p, err := capnp.Struct(s).Ptr(9)
	return Signature_List(p.List()), err
}

func (s Transaction_PDU_roomVersion8) HasSignatures() bool {
	return capnp.Struct(s).HasPtr(9)
}

func (s Transaction_PDU_roomVersion8) SetSignatures(v Signature_List) error {
	return capnp.Struct(s).SetPtr(9, v.ToPtr())
}

// NewSignatures sets the signatures field to a newly
// allocated Signature_List, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion8) NewSignatures(n int32) (Signature_List, error) {
	l, err := NewSignature_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return Signature_List{}, err
	}
	err = capnp.Struct(s).SetPtr(9, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion8) Unsigned() (Transaction_PDU_Unsigned, error) {
	p, err := capnp.Struct(s).Ptr(10)
	return Transaction_PDU_Unsigned(p.Struct()), err
}

func (s Transaction_PDU_roomVersion8) HasUnsigned() bool {
	return capnp.Struct(s).HasPtr(10)
}

func (s Transaction_PDU_roomVersion8) SetUnsigned(v Transaction_PDU_Unsigned) error {
	return capnp.Struct(s).SetPtr(10, capnp.Struct(v).ToPtr())
}

// NewUnsigned sets the unsigned field to a newly
// allocated Transaction_PDU_Unsigned struct, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion8) NewUnsigned() (Transaction_PDU_Unsigned, error) {
	ss, err := NewTransaction_PDU_Unsigned(capnp.Struct(s).Segment())
	if err != nil {
		return Transaction_PDU_Unsigned{}, err
	}
	err = capnp.Struct(s).SetPtr(10, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Transaction_PDU) RoomVersion9() Transaction_PDU_roomVersion9 {
	return Transaction_PDU_roomVersion9(s)
}

func (s Transaction_PDU) SetRoomVersion9() {
	capnp.Struct(s).SetUint16(16, 8)
}

func (s Transaction_PDU_roomVersion9) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Transaction_PDU_roomVersion9) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Transaction_PDU_roomVersion9) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Transaction_PDU_roomVersion9) Depth() uint64 {
	return capnp.Struct(s).Uint64(0)
}

func (s Transaction_PDU_roomVersion9) SetDepth(v uint64) {
	capnp.Struct(s).SetUint64(0, v)
}

func (s Transaction_PDU_roomVersion9) OriginServerTS() int64 {
	return int64(capnp.Struct(s).Uint64(8))
}

func (s Transaction_PDU_roomVersion9) SetOriginServerTS(v int64) {
	capnp.Struct(s).SetUint64(8, uint64(v))
}

func (s Transaction_PDU_roomVersion9) RoomID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion9) HasRoomID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Transaction_PDU_roomVersion9) RoomIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion9) SetRoomID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Transaction_PDU_roomVersion9) Sender() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion9) HasSender() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Transaction_PDU_roomVersion9) SenderBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion9) SetSender(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s Transaction_PDU_roomVersion9) Type() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion9) HasType() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s Transaction_PDU_roomVersion9) TypeBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion9) SetType(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

func (s Transaction_PDU_roomVersion9) Redacts() (string, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion9) HasRedacts() bool {
	return capnp.Struct(s).HasPtr(3)
}

func (s Transaction_PDU_roomVersion9) RedactsBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion9) SetRedacts(v string) error {
	return capnp.Struct(s).SetText(3, v)
}

func (s Transaction_PDU_roomVersion9) StateKey() (string, error) {
	p, err := capnp.Struct(s).Ptr(4)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion9) HasStateKey() bool {
	return capnp.Struct(s).HasPtr(4)
}

func (s Transaction_PDU_roomVersion9) StateKeyBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(4)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion9) SetStateKey(v string) error {
	return capnp.Struct(s).SetText(4, v)
}

func (s Transaction_PDU_roomVersion9) Content() (JsonValue, error) {
	p, err := capnp.Struct(s).Ptr(5)
	return JsonValue(p.Struct()), err
}

func (s Transaction_PDU_roomVersion9) HasContent() bool {
	return capnp.Struct(s).HasPtr(5)
}

func (s Transaction_PDU_roomVersion9) SetContent(v JsonValue) error {
	return capnp.Struct(s).SetPtr(5, capnp.Struct(v).ToPtr())
}

// NewContent sets the content field to a newly
// allocated JsonValue struct, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion9) NewContent() (JsonValue, error) {
	ss, err := NewJsonValue(capnp.Struct(s).Segment())
	if err != nil {
		return JsonValue{}, err
	}
	err = capnp.Struct(s).SetPtr(5, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Transaction_PDU_roomVersion9) AuthEvents() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(6)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion9) HasAuthEvents() bool {
	return capnp.Struct(s).HasPtr(6)
}

func (s Transaction_PDU_roomVersion9) SetAuthEvents(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(6, v.ToPtr())
}

// NewAuthEvents sets the authEvents field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion9) NewAuthEvents(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(6, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion9) PrevEvents() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(7)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion9) HasPrevEvents() bool {
	return capnp.Struct(s).HasPtr(7)
}

func (s Transaction_PDU_roomVersion9) SetPrevEvents(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(7, v.ToPtr())
}

// NewPrevEvents sets the prevEvents field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion9) NewPrevEvents(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(7, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion9) Hashes() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(8)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion9) HasHashes() bool {
	return capnp.Struct(s).HasPtr(8)
}

func (s Transaction_PDU_roomVersion9) SetHashes(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(8, v.ToPtr())
}

// NewHashes sets the hashes field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion9) NewHashes(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(8, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion9) Signatures() (Signature_List, error) {
	p, err := capnp.Struct(s).Ptr(9)
	return Signature_List(p.List()), err
}

func (s Transaction_PDU_roomVersion9) HasSignatures() bool {
	return capnp.Struct(s).HasPtr(9)
}

func (s Transaction_PDU_roomVersion9) SetSignatures(v Signature_List) error {
	return capnp.Struct(s).SetPtr(9, v.ToPtr())
}

// NewSignatures sets the signatures field to a newly
// allocated Signature_List, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion9) NewSignatures(n int32) (Signature_List, error) {
	l, err := NewSignature_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return Signature_List{}, err
	}
	err = capnp.Struct(s).SetPtr(9, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion9) Unsigned() (Transaction_PDU_Unsigned, error) {
	p, err := capnp.Struct(s).Ptr(10)
	return Transaction_PDU_Unsigned(p.Struct()), err
}

func (s Transaction_PDU_roomVersion9) HasUnsigned() bool {
	return capnp.Struct(s).HasPtr(10)
}

func (s Transaction_PDU_roomVersion9) SetUnsigned(v Transaction_PDU_Unsigned) error {
	return capnp.Struct(s).SetPtr(10, capnp.Struct(v).ToPtr())
}

// NewUnsigned sets the unsigned field to a newly
// allocated Transaction_PDU_Unsigned struct, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion9) NewUnsigned() (Transaction_PDU_Unsigned, error) {
	ss, err := NewTransaction_PDU_Unsigned(capnp.Struct(s).Segment())
	if err != nil {
		return Transaction_PDU_Unsigned{}, err
	}
	err = capnp.Struct(s).SetPtr(10, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Transaction_PDU) RoomVersion10() Transaction_PDU_roomVersion10 {
	return Transaction_PDU_roomVersion10(s)
}

func (s Transaction_PDU) SetRoomVersion10() {
	capnp.Struct(s).SetUint16(16, 9)
}

func (s Transaction_PDU_roomVersion10) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Transaction_PDU_roomVersion10) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Transaction_PDU_roomVersion10) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Transaction_PDU_roomVersion10) Depth() uint64 {
	return capnp.Struct(s).Uint64(0)
}

func (s Transaction_PDU_roomVersion10) SetDepth(v uint64) {
	capnp.Struct(s).SetUint64(0, v)
}

func (s Transaction_PDU_roomVersion10) OriginServerTS() int64 {
	return int64(capnp.Struct(s).Uint64(8))
}

func (s Transaction_PDU_roomVersion10) SetOriginServerTS(v int64) {
	capnp.Struct(s).SetUint64(8, uint64(v))
}

func (s Transaction_PDU_roomVersion10) RoomID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion10) HasRoomID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Transaction_PDU_roomVersion10) RoomIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion10) SetRoomID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Transaction_PDU_roomVersion10) Sender() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion10) HasSender() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Transaction_PDU_roomVersion10) SenderBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion10) SetSender(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s Transaction_PDU_roomVersion10) Type() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion10) HasType() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s Transaction_PDU_roomVersion10) TypeBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion10) SetType(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

func (s Transaction_PDU_roomVersion10) Redacts() (string, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion10) HasRedacts() bool {
	return capnp.Struct(s).HasPtr(3)
}

func (s Transaction_PDU_roomVersion10) RedactsBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion10) SetRedacts(v string) error {
	return capnp.Struct(s).SetText(3, v)
}

func (s Transaction_PDU_roomVersion10) StateKey() (string, error) {
	p, err := capnp.Struct(s).Ptr(4)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion10) HasStateKey() bool {
	return capnp.Struct(s).HasPtr(4)
}

func (s Transaction_PDU_roomVersion10) StateKeyBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(4)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion10) SetStateKey(v string) error {
	return capnp.Struct(s).SetText(4, v)
}

func (s Transaction_PDU_roomVersion10) Content() (JsonValue, error) {
	p, err := capnp.Struct(s).Ptr(5)
	return JsonValue(p.Struct()), err
}

func (s Transaction_PDU_roomVersion10) HasContent() bool {
	return capnp.Struct(s).HasPtr(5)
}

func (s Transaction_PDU_roomVersion10) SetContent(v JsonValue) error {
	return capnp.Struct(s).SetPtr(5, capnp.Struct(v).ToPtr())
}

// NewContent sets the content field to a newly
// allocated JsonValue struct, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion10) NewContent() (JsonValue, error) {
	ss, err := NewJsonValue(capnp.Struct(s).Segment())
	if err != nil {
		return JsonValue{}, err
	}
	err = capnp.Struct(s).SetPtr(5, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Transaction_PDU_roomVersion10) AuthEvents() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(6)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion10) HasAuthEvents() bool {
	return capnp.Struct(s).HasPtr(6)
}

func (s Transaction_PDU_roomVersion10) SetAuthEvents(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(6, v.ToPtr())
}

// NewAuthEvents sets the authEvents field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion10) NewAuthEvents(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(6, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion10) PrevEvents() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(7)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion10) HasPrevEvents() bool {
	return capnp.Struct(s).HasPtr(7)
}

func (s Transaction_PDU_roomVersion10) SetPrevEvents(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(7, v.ToPtr())
}

// NewPrevEvents sets the prevEvents field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion10) NewPrevEvents(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(7, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion10) Hashes() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(8)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion10) HasHashes() bool {
	return capnp.Struct(s).HasPtr(8)
}

func (s Transaction_PDU_roomVersion10) SetHashes(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(8, v.ToPtr())
}

// NewHashes sets the hashes field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion10) NewHashes(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(8, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion10) Signatures() (Signature_List, error) {
	p, err := capnp.Struct(s).Ptr(9)
	return Signature_List(p.List()), err
}

func (s Transaction_PDU_roomVersion10) HasSignatures() bool {
	return capnp.Struct(s).HasPtr(9)
}

func (s Transaction_PDU_roomVersion10) SetSignatures(v Signature_List) error {
	return capnp.Struct(s).SetPtr(9, v.ToPtr())
}

// NewSignatures sets the signatures field to a newly
// allocated Signature_List, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion10) NewSignatures(n int32) (Signature_List, error) {
	l, err := NewSignature_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return Signature_List{}, err
	}
	err = capnp.Struct(s).SetPtr(9, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion10) Unsigned() (Transaction_PDU_Unsigned, error) {
	p, err := capnp.Struct(s).Ptr(10)
	return Transaction_PDU_Unsigned(p.Struct()), err
}

func (s Transaction_PDU_roomVersion10) HasUnsigned() bool {
	return capnp.Struct(s).HasPtr(10)
}

func (s Transaction_PDU_roomVersion10) SetUnsigned(v Transaction_PDU_Unsigned) error {
	return capnp.Struct(s).SetPtr(10, capnp.Struct(v).ToPtr())
}

// NewUnsigned sets the unsigned field to a newly
// allocated Transaction_PDU_Unsigned struct, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion10) NewUnsigned() (Transaction_PDU_Unsigned, error) {
	ss, err := NewTransaction_PDU_Unsigned(capnp.Struct(s).Segment())
	if err != nil {
		return Transaction_PDU_Unsigned{}, err
	}
	err = capnp.Struct(s).SetPtr(10, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Transaction_PDU) RoomVersion11() Transaction_PDU_roomVersion11 {
	return Transaction_PDU_roomVersion11(s)
}

func (s Transaction_PDU) SetRoomVersion11() {
	capnp.Struct(s).SetUint16(16, 10)
}

func (s Transaction_PDU_roomVersion11) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Transaction_PDU_roomVersion11) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Transaction_PDU_roomVersion11) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Transaction_PDU_roomVersion11) Depth() uint64 {
	return capnp.Struct(s).Uint64(0)
}

func (s Transaction_PDU_roomVersion11) SetDepth(v uint64) {
	capnp.Struct(s).SetUint64(0, v)
}

func (s Transaction_PDU_roomVersion11) OriginServerTS() int64 {
	return int64(capnp.Struct(s).Uint64(8))
}

func (s Transaction_PDU_roomVersion11) SetOriginServerTS(v int64) {
	capnp.Struct(s).SetUint64(8, uint64(v))
}

func (s Transaction_PDU_roomVersion11) RoomID() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion11) HasRoomID() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Transaction_PDU_roomVersion11) RoomIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion11) SetRoomID(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s Transaction_PDU_roomVersion11) Sender() (string, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion11) HasSender() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s Transaction_PDU_roomVersion11) SenderBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion11) SetSender(v string) error {
	return capnp.Struct(s).SetText(1, v)
}

func (s Transaction_PDU_roomVersion11) Type() (string, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion11) HasType() bool {
	return capnp.Struct(s).HasPtr(2)
}

func (s Transaction_PDU_roomVersion11) TypeBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(2)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion11) SetType(v string) error {
	return capnp.Struct(s).SetText(2, v)
}

func (s Transaction_PDU_roomVersion11) StateKey() (string, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.Text(), err
}

func (s Transaction_PDU_roomVersion11) HasStateKey() bool {
	return capnp.Struct(s).HasPtr(3)
}

func (s Transaction_PDU_roomVersion11) StateKeyBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(3)
	return p.TextBytes(), err
}

func (s Transaction_PDU_roomVersion11) SetStateKey(v string) error {
	return capnp.Struct(s).SetText(3, v)
}

func (s Transaction_PDU_roomVersion11) Content() (JsonValue, error) {
	p, err := capnp.Struct(s).Ptr(4)
	return JsonValue(p.Struct()), err
}

func (s Transaction_PDU_roomVersion11) HasContent() bool {
	return capnp.Struct(s).HasPtr(4)
}

func (s Transaction_PDU_roomVersion11) SetContent(v JsonValue) error {
	return capnp.Struct(s).SetPtr(4, capnp.Struct(v).ToPtr())
}

// NewContent sets the content field to a newly
// allocated JsonValue struct, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion11) NewContent() (JsonValue, error) {
	ss, err := NewJsonValue(capnp.Struct(s).Segment())
	if err != nil {
		return JsonValue{}, err
	}
	err = capnp.Struct(s).SetPtr(4, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s Transaction_PDU_roomVersion11) AuthEvents() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(5)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion11) HasAuthEvents() bool {
	return capnp.Struct(s).HasPtr(5)
}

func (s Transaction_PDU_roomVersion11) SetAuthEvents(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(5, v.ToPtr())
}

// NewAuthEvents sets the authEvents field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion11) NewAuthEvents(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(5, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion11) PrevEvents() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(6)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion11) HasPrevEvents() bool {
	return capnp.Struct(s).HasPtr(6)
}

func (s Transaction_PDU_roomVersion11) SetPrevEvents(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(6, v.ToPtr())
}

// NewPrevEvents sets the prevEvents field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion11) NewPrevEvents(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(6, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion11) Hashes() (capnp.TextList, error) {
	p, err := capnp.Struct(s).Ptr(7)
	return capnp.TextList(p.List()), err
}

func (s Transaction_PDU_roomVersion11) HasHashes() bool {
	return capnp.Struct(s).HasPtr(7)
}

func (s Transaction_PDU_roomVersion11) SetHashes(v capnp.TextList) error {
	return capnp.Struct(s).SetPtr(7, v.ToPtr())
}

// NewHashes sets the hashes field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion11) NewHashes(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(capnp.Struct(s).Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = capnp.Struct(s).SetPtr(7, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion11) Signatures() (Signature_List, error) {
	p, err := capnp.Struct(s).Ptr(8)
	return Signature_List(p.List()), err
}

func (s Transaction_PDU_roomVersion11) HasSignatures() bool {
	return capnp.Struct(s).HasPtr(8)
}

func (s Transaction_PDU_roomVersion11) SetSignatures(v Signature_List) error {
	return capnp.Struct(s).SetPtr(8, v.ToPtr())
}

// NewSignatures sets the signatures field to a newly
// allocated Signature_List, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion11) NewSignatures(n int32) (Signature_List, error) {
	l, err := NewSignature_List(capnp.Struct(s).Segment(), n)
	if err != nil {
		return Signature_List{}, err
	}
	err = capnp.Struct(s).SetPtr(8, l.ToPtr())
	return l, err
}
func (s Transaction_PDU_roomVersion11) Unsigned() (Transaction_PDU_Unsigned, error) {
	p, err := capnp.Struct(s).Ptr(9)
	return Transaction_PDU_Unsigned(p.Struct()), err
}

func (s Transaction_PDU_roomVersion11) HasUnsigned() bool {
	return capnp.Struct(s).HasPtr(9)
}

func (s Transaction_PDU_roomVersion11) SetUnsigned(v Transaction_PDU_Unsigned) error {
	return capnp.Struct(s).SetPtr(9, capnp.Struct(v).ToPtr())
}

// NewUnsigned sets the unsigned field to a newly
// allocated Transaction_PDU_Unsigned struct, preferring placement in s's segment.
func (s Transaction_PDU_roomVersion11) NewUnsigned() (Transaction_PDU_Unsigned, error) {
	ss, err := NewTransaction_PDU_Unsigned(capnp.Struct(s).Segment())
	if err != nil {
		return Transaction_PDU_Unsigned{}, err
	}
	err = capnp.Struct(s).SetPtr(9, capnp.Struct(ss).ToPtr())
	return ss, err
}

// Transaction_PDU_List is a list of Transaction_PDU.
type Transaction_PDU_List = capnp.StructList[Transaction_PDU]

// NewTransaction_PDU creates a new list of Transaction_PDU.
func NewTransaction_PDU_List(s *capnp.Segment, sz int32) (Transaction_PDU_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 12}, sz)
	return capnp.StructList[Transaction_PDU](l), err
}

// Transaction_PDU_Future is a wrapper for a Transaction_PDU promised by a client call.
type Transaction_PDU_Future struct{ *capnp.Future }

func (f Transaction_PDU_Future) Struct() (Transaction_PDU, error) {
	p, err := f.Future.Ptr()
	return Transaction_PDU(p.Struct()), err
}
func (p Transaction_PDU_Future) RoomVersion1() Transaction_PDU_roomVersion1_Future {
	return Transaction_PDU_roomVersion1_Future{p.Future}
}

// Transaction_PDU_roomVersion1_Future is a wrapper for a Transaction_PDU_roomVersion1 promised by a client call.
type Transaction_PDU_roomVersion1_Future struct{ *capnp.Future }

func (f Transaction_PDU_roomVersion1_Future) Struct() (Transaction_PDU_roomVersion1, error) {
	p, err := f.Future.Ptr()
	return Transaction_PDU_roomVersion1(p.Struct()), err
}
func (p Transaction_PDU_roomVersion1_Future) Content() JsonValue_Future {
	return JsonValue_Future{Future: p.Future.Field(6, nil)}
}
func (p Transaction_PDU_roomVersion1_Future) Unsigned() Transaction_PDU_Unsigned_Future {
	return Transaction_PDU_Unsigned_Future{Future: p.Future.Field(11, nil)}
}
func (p Transaction_PDU_Future) RoomVersion2() Transaction_PDU_roomVersion2_Future {
	return Transaction_PDU_roomVersion2_Future{p.Future}
}

// Transaction_PDU_roomVersion2_Future is a wrapper for a Transaction_PDU_roomVersion2 promised by a client call.
type Transaction_PDU_roomVersion2_Future struct{ *capnp.Future }

func (f Transaction_PDU_roomVersion2_Future) Struct() (Transaction_PDU_roomVersion2, error) {
	p, err := f.Future.Ptr()
	return Transaction_PDU_roomVersion2(p.Struct()), err
}
func (p Transaction_PDU_roomVersion2_Future) Content() JsonValue_Future {
	return JsonValue_Future{Future: p.Future.Field(6, nil)}
}
func (p Transaction_PDU_roomVersion2_Future) Unsigned() Transaction_PDU_Unsigned_Future {
	return Transaction_PDU_Unsigned_Future{Future: p.Future.Field(11, nil)}
}
func (p Transaction_PDU_Future) RoomVersion3() Transaction_PDU_roomVersion3_Future {
	return Transaction_PDU_roomVersion3_Future{p.Future}
}

// Transaction_PDU_roomVersion3_Future is a wrapper for a Transaction_PDU_roomVersion3 promised by a client call.
type Transaction_PDU_roomVersion3_Future struct{ *capnp.Future }

func (f Transaction_PDU_roomVersion3_Future) Struct() (Transaction_PDU_roomVersion3, error) {
	p, err := f.Future.Ptr()
	return Transaction_PDU_roomVersion3(p.Struct()), err
}
func (p Transaction_PDU_roomVersion3_Future) Content() JsonValue_Future {
	return JsonValue_Future{Future: p.Future.Field(5, nil)}
}
func (p Transaction_PDU_roomVersion3_Future) Unsigned() Transaction_PDU_Unsigned_Future {
	return Transaction_PDU_Unsigned_Future{Future: p.Future.Field(10, nil)}
}
func (p Transaction_PDU_Future) RoomVersion4() Transaction_PDU_roomVersion4_Future {
	return Transaction_PDU_roomVersion4_Future{p.Future}
}

// Transaction_PDU_roomVersion4_Future is a wrapper for a Transaction_PDU_roomVersion4 promised by a client call.
type Transaction_PDU_roomVersion4_Future struct{ *capnp.Future }

func (f Transaction_PDU_roomVersion4_Future) Struct() (Transaction_PDU_roomVersion4, error) {
	p, err := f.Future.Ptr()
	return Transaction_PDU_roomVersion4(p.Struct()), err
}
func (p Transaction_PDU_roomVersion4_Future) Content() JsonValue_Future {
	return JsonValue_Future{Future: p.Future.Field(5, nil)}
}
func (p Transaction_PDU_roomVersion4_Future) Unsigned() Transaction_PDU_Unsigned_Future {
	return Transaction_PDU_Unsigned_Future{Future: p.Future.Field(10, nil)}
}
func (p Transaction_PDU_Future) RoomVersion5() Transaction_PDU_roomVersion5_Future {
	return Transaction_PDU_roomVersion5_Future{p.Future}
}

// Transaction_PDU_roomVersion5_Future is a wrapper for a Transaction_PDU_roomVersion5 promised by a client call.
type Transaction_PDU_roomVersion5_Future struct{ *capnp.Future }

func (f Transaction_PDU_roomVersion5_Future) Struct() (Transaction_PDU_roomVersion5, error) {
	p, err := f.Future.Ptr()
	return Transaction_PDU_roomVersion5(p.Struct()), err
}
func (p Transaction_PDU_roomVersion5_Future) Content() JsonValue_Future {
	return JsonValue_Future{Future: p.Future.Field(5, nil)}
}
func (p Transaction_PDU_roomVersion5_Future) Unsigned() Transaction_PDU_Unsigned_Future {
	return Transaction_PDU_Unsigned_Future{Future: p.Future.Field(10, nil)}
}
func (p Transaction_PDU_Future) RoomVersion6() Transaction_PDU_roomVersion6_Future {
	return Transaction_PDU_roomVersion6_Future{p.Future}
}

// Transaction_PDU_roomVersion6_Future is a wrapper for a Transaction_PDU_roomVersion6 promised by a client call.
type Transaction_PDU_roomVersion6_Future struct{ *capnp.Future }

func (f Transaction_PDU_roomVersion6_Future) Struct() (Transaction_PDU_roomVersion6, error) {
	p, err := f.Future.Ptr()
	return Transaction_PDU_roomVersion6(p.Struct()), err
}
func (p Transaction_PDU_roomVersion6_Future) Content() JsonValue_Future {
	return JsonValue_Future{Future: p.Future.Field(5, nil)}
}
func (p Transaction_PDU_roomVersion6_Future) Unsigned() Transaction_PDU_Unsigned_Future {
	return Transaction_PDU_Unsigned_Future{Future: p.Future.Field(10, nil)}
}
func (p Transaction_PDU_Future) RoomVersion7() Transaction_PDU_roomVersion7_Future {
	return Transaction_PDU_roomVersion7_Future{p.Future}
}

// Transaction_PDU_roomVersion7_Future is a wrapper for a Transaction_PDU_roomVersion7 promised by a client call.
type Transaction_PDU_roomVersion7_Future struct{ *capnp.Future }

func (f Transaction_PDU_roomVersion7_Future) Struct() (Transaction_PDU_roomVersion7, error) {
	p, err := f.Future.Ptr()
	return Transaction_PDU_roomVersion7(p.Struct()), err
}
func (p Transaction_PDU_roomVersion7_Future) Content() JsonValue_Future {
	return JsonValue_Future{Future: p.Future.Field(5, nil)}
}
func (p Transaction_PDU_roomVersion7_Future) Unsigned() Transaction_PDU_Unsigned_Future {
	return Transaction_PDU_Unsigned_Future{Future: p.Future.Field(10, nil)}
}
func (p Transaction_PDU_Future) RoomVersion8() Transaction_PDU_roomVersion8_Future {
	return Transaction_PDU_roomVersion8_Future{p.Future}
}

// Transaction_PDU_roomVersion8_Future is a wrapper for a Transaction_PDU_roomVersion8 promised by a client call.
type Transaction_PDU_roomVersion8_Future struct{ *capnp.Future }

func (f Transaction_PDU_roomVersion8_Future) Struct() (Transaction_PDU_roomVersion8, error) {
	p, err := f.Future.Ptr()
	return Transaction_PDU_roomVersion8(p.Struct()), err
}
func (p Transaction_PDU_roomVersion8_Future) Content() JsonValue_Future {
	return JsonValue_Future{Future: p.Future.Field(5, nil)}
}
func (p Transaction_PDU_roomVersion8_Future) Unsigned() Transaction_PDU_Unsigned_Future {
	return Transaction_PDU_Unsigned_Future{Future: p.Future.Field(10, nil)}
}
func (p Transaction_PDU_Future) RoomVersion9() Transaction_PDU_roomVersion9_Future {
	return Transaction_PDU_roomVersion9_Future{p.Future}
}

// Transaction_PDU_roomVersion9_Future is a wrapper for a Transaction_PDU_roomVersion9 promised by a client call.
type Transaction_PDU_roomVersion9_Future struct{ *capnp.Future }

func (f Transaction_PDU_roomVersion9_Future) Struct() (Transaction_PDU_roomVersion9, error) {
	p, err := f.Future.Ptr()
	return Transaction_PDU_roomVersion9(p.Struct()), err
}
func (p Transaction_PDU_roomVersion9_Future) Content() JsonValue_Future {
	return JsonValue_Future{Future: p.Future.Field(5, nil)}
}
func (p Transaction_PDU_roomVersion9_Future) Unsigned() Transaction_PDU_Unsigned_Future {
	return Transaction_PDU_Unsigned_Future{Future: p.Future.Field(10, nil)}
}
func (p Transaction_PDU_Future) RoomVersion10() Transaction_PDU_roomVersion10_Future {
	return Transaction_PDU_roomVersion10_Future{p.Future}
}

// Transaction_PDU_roomVersion10_Future is a wrapper for a Transaction_PDU_roomVersion10 promised by a client call.
type Transaction_PDU_roomVersion10_Future struct{ *capnp.Future }

func (f Transaction_PDU_roomVersion10_Future) Struct() (Transaction_PDU_roomVersion10, error) {
	p, err := f.Future.Ptr()
	return Transaction_PDU_roomVersion10(p.Struct()), err
}
func (p Transaction_PDU_roomVersion10_Future) Content() JsonValue_Future {
	return JsonValue_Future{Future: p.Future.Field(5, nil)}
}
func (p Transaction_PDU_roomVersion10_Future) Unsigned() Transaction_PDU_Unsigned_Future {
	return Transaction_PDU_Unsigned_Future{Future: p.Future.Field(10, nil)}
}
func (p Transaction_PDU_Future) RoomVersion11() Transaction_PDU_roomVersion11_Future {
	return Transaction_PDU_roomVersion11_Future{p.Future}
}

// Transaction_PDU_roomVersion11_Future is a wrapper for a Transaction_PDU_roomVersion11 promised by a client call.
type Transaction_PDU_roomVersion11_Future struct{ *capnp.Future }

func (f Transaction_PDU_roomVersion11_Future) Struct() (Transaction_PDU_roomVersion11, error) {
	p, err := f.Future.Ptr()
	return Transaction_PDU_roomVersion11(p.Struct()), err
}
func (p Transaction_PDU_roomVersion11_Future) Content() JsonValue_Future {
	return JsonValue_Future{Future: p.Future.Field(4, nil)}
}
func (p Transaction_PDU_roomVersion11_Future) Unsigned() Transaction_PDU_Unsigned_Future {
	return Transaction_PDU_Unsigned_Future{Future: p.Future.Field(9, nil)}
}

type Transaction_PDU_EventReference capnp.Struct
type Transaction_PDU_EventReference_Which uint16

const (
	Transaction_PDU_EventReference_Which_eventID Transaction_PDU_EventReference_Which = 0
	Transaction_PDU_EventReference_Which_sha256  Transaction_PDU_EventReference_Which = 1
)

func (w Transaction_PDU_EventReference_Which) String() string {
	const s = "eventIDsha256"
	switch w {
	case Transaction_PDU_EventReference_Which_eventID:
		return s[0:7]
	case Transaction_PDU_EventReference_Which_sha256:
		return s[7:13]

	}
	return "Transaction_PDU_EventReference_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// Transaction_PDU_EventReference_TypeID is the unique identifier for the type Transaction_PDU_EventReference.
const Transaction_PDU_EventReference_TypeID = 0xbb294824d9b4424b

func NewTransaction_PDU_EventReference(s *capnp.Segment) (Transaction_PDU_EventReference, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Transaction_PDU_EventReference(st), err
}

func NewRootTransaction_PDU_EventReference(s *capnp.Segment) (Transaction_PDU_EventReference, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Transaction_PDU_EventReference(st), err
}

func ReadRootTransaction_PDU_EventReference(msg *capnp.Message) (Transaction_PDU_EventReference, error) {
	root, err := msg.Root()
	return Transaction_PDU_EventReference(root.Struct()), err
}

func (s Transaction_PDU_EventReference) String() string {
	str, _ := text.Marshal(0xbb294824d9b4424b, capnp.Struct(s))
	return str
}

func (s Transaction_PDU_EventReference) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Transaction_PDU_EventReference) DecodeFromPtr(p capnp.Ptr) Transaction_PDU_EventReference {
	return Transaction_PDU_EventReference(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Transaction_PDU_EventReference) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}

func (s Transaction_PDU_EventReference) Which() Transaction_PDU_EventReference_Which {
	return Transaction_PDU_EventReference_Which(capnp.Struct(s).Uint16(0))
}
func (s Transaction_PDU_EventReference) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Transaction_PDU_EventReference) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Transaction_PDU_EventReference) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Transaction_PDU_EventReference) EventID() (string, error) {
	if capnp.Struct(s).Uint16(0) != 0 {
		panic("Which() != eventID")
	}
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Transaction_PDU_EventReference) HasEventID() bool {
	if capnp.Struct(s).Uint16(0) != 0 {
		return false
	}
	return capnp.Struct(s).HasPtr(0)
}

func (s Transaction_PDU_EventReference) EventIDBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Transaction_PDU_EventReference) SetEventID(v string) error {
	capnp.Struct(s).SetUint16(0, 0)
	return capnp.Struct(s).SetText(0, v)
}

func (s Transaction_PDU_EventReference) Sha256() (string, error) {
	if capnp.Struct(s).Uint16(0) != 1 {
		panic("Which() != sha256")
	}
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Transaction_PDU_EventReference) HasSha256() bool {
	if capnp.Struct(s).Uint16(0) != 1 {
		return false
	}
	return capnp.Struct(s).HasPtr(0)
}

func (s Transaction_PDU_EventReference) Sha256Bytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Transaction_PDU_EventReference) SetSha256(v string) error {
	capnp.Struct(s).SetUint16(0, 1)
	return capnp.Struct(s).SetText(0, v)
}

// Transaction_PDU_EventReference_List is a list of Transaction_PDU_EventReference.
type Transaction_PDU_EventReference_List = capnp.StructList[Transaction_PDU_EventReference]

// NewTransaction_PDU_EventReference creates a new list of Transaction_PDU_EventReference.
func NewTransaction_PDU_EventReference_List(s *capnp.Segment, sz int32) (Transaction_PDU_EventReference_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return capnp.StructList[Transaction_PDU_EventReference](l), err
}

// Transaction_PDU_EventReference_Future is a wrapper for a Transaction_PDU_EventReference promised by a client call.
type Transaction_PDU_EventReference_Future struct{ *capnp.Future }

func (f Transaction_PDU_EventReference_Future) Struct() (Transaction_PDU_EventReference, error) {
	p, err := f.Future.Ptr()
	return Transaction_PDU_EventReference(p.Struct()), err
}

type Transaction_PDU_Unsigned capnp.Struct

// Transaction_PDU_Unsigned_TypeID is the unique identifier for the type Transaction_PDU_Unsigned.
const Transaction_PDU_Unsigned_TypeID = 0x83ba1e25907bb64e

func NewTransaction_PDU_Unsigned(s *capnp.Segment) (Transaction_PDU_Unsigned, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Transaction_PDU_Unsigned(st), err
}

func NewRootTransaction_PDU_Unsigned(s *capnp.Segment) (Transaction_PDU_Unsigned, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Transaction_PDU_Unsigned(st), err
}

func ReadRootTransaction_PDU_Unsigned(msg *capnp.Message) (Transaction_PDU_Unsigned, error) {
	root, err := msg.Root()
	return Transaction_PDU_Unsigned(root.Struct()), err
}

func (s Transaction_PDU_Unsigned) String() string {
	str, _ := text.Marshal(0x83ba1e25907bb64e, capnp.Struct(s))
	return str
}

func (s Transaction_PDU_Unsigned) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Transaction_PDU_Unsigned) DecodeFromPtr(p capnp.Ptr) Transaction_PDU_Unsigned {
	return Transaction_PDU_Unsigned(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Transaction_PDU_Unsigned) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Transaction_PDU_Unsigned) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Transaction_PDU_Unsigned) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Transaction_PDU_Unsigned) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Transaction_PDU_Unsigned) Age() uint64 {
	return capnp.Struct(s).Uint64(0)
}

func (s Transaction_PDU_Unsigned) SetAge(v uint64) {
	capnp.Struct(s).SetUint64(0, v)
}

// Transaction_PDU_Unsigned_List is a list of Transaction_PDU_Unsigned.
type Transaction_PDU_Unsigned_List = capnp.StructList[Transaction_PDU_Unsigned]

// NewTransaction_PDU_Unsigned creates a new list of Transaction_PDU_Unsigned.
func NewTransaction_PDU_Unsigned_List(s *capnp.Segment, sz int32) (Transaction_PDU_Unsigned_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return capnp.StructList[Transaction_PDU_Unsigned](l), err
}

// Transaction_PDU_Unsigned_Future is a wrapper for a Transaction_PDU_Unsigned promised by a client call.
type Transaction_PDU_Unsigned_Future struct{ *capnp.Future }

func (f Transaction_PDU_Unsigned_Future) Struct() (Transaction_PDU_Unsigned, error) {
	p, err := f.Future.Ptr()
	return Transaction_PDU_Unsigned(p.Struct()), err
}

type BackfillData capnp.Struct
type BackfillData_Which uint16

const (
	BackfillData_Which_metadata BackfillData_Which = 0
	BackfillData_Which_pdu      BackfillData_Which = 1
)

func (w BackfillData_Which) String() string {
	const s = "metadatapdu"
	switch w {
	case BackfillData_Which_metadata:
		return s[0:8]
	case BackfillData_Which_pdu:
		return s[8:11]

	}
	return "BackfillData_Which(" + strconv.FormatUint(uint64(w), 10) + ")"
}

// BackfillData_TypeID is the unique identifier for the type BackfillData.
const BackfillData_TypeID = 0xf2951513b06ace65

func NewBackfillData(s *capnp.Segment) (BackfillData, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return BackfillData(st), err
}

func NewRootBackfillData(s *capnp.Segment) (BackfillData, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return BackfillData(st), err
}

func ReadRootBackfillData(msg *capnp.Message) (BackfillData, error) {
	root, err := msg.Root()
	return BackfillData(root.Struct()), err
}

func (s BackfillData) String() string {
	str, _ := text.Marshal(0xf2951513b06ace65, capnp.Struct(s))
	return str
}

func (s BackfillData) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (BackfillData) DecodeFromPtr(p capnp.Ptr) BackfillData {
	return BackfillData(capnp.Struct{}.DecodeFromPtr(p))
}

func (s BackfillData) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}

func (s BackfillData) Which() BackfillData_Which {
	return BackfillData_Which(capnp.Struct(s).Uint16(0))
}
func (s BackfillData) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s BackfillData) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s BackfillData) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s BackfillData) Metadata() (BackfillData_Metadata, error) {
	if capnp.Struct(s).Uint16(0) != 0 {
		panic("Which() != metadata")
	}
	p, err := capnp.Struct(s).Ptr(0)
	return BackfillData_Metadata(p.Struct()), err
}

func (s BackfillData) HasMetadata() bool {
	if capnp.Struct(s).Uint16(0) != 0 {
		return false
	}
	return capnp.Struct(s).HasPtr(0)
}

func (s BackfillData) SetMetadata(v BackfillData_Metadata) error {
	capnp.Struct(s).SetUint16(0, 0)
	return capnp.Struct(s).SetPtr(0, capnp.Struct(v).ToPtr())
}

// NewMetadata sets the metadata field to a newly
// allocated BackfillData_Metadata struct, preferring placement in s's segment.
func (s BackfillData) NewMetadata() (BackfillData_Metadata, error) {
	capnp.Struct(s).SetUint16(0, 0)
	ss, err := NewBackfillData_Metadata(capnp.Struct(s).Segment())
	if err != nil {
		return BackfillData_Metadata{}, err
	}
	err = capnp.Struct(s).SetPtr(0, capnp.Struct(ss).ToPtr())
	return ss, err
}

func (s BackfillData) Pdu() (Transaction_PDU, error) {
	if capnp.Struct(s).Uint16(0) != 1 {
		panic("Which() != pdu")
	}
	p, err := capnp.Struct(s).Ptr(0)
	return Transaction_PDU(p.Struct()), err
}

func (s BackfillData) HasPdu() bool {
	if capnp.Struct(s).Uint16(0) != 1 {
		return false
	}
	return capnp.Struct(s).HasPtr(0)
}

func (s BackfillData) SetPdu(v Transaction_PDU) error {
	capnp.Struct(s).SetUint16(0, 1)
	return capnp.Struct(s).SetPtr(0, capnp.Struct(v).ToPtr())
}

// NewPdu sets the pdu field to a newly
// allocated Transaction_PDU struct, preferring placement in s's segment.
func (s BackfillData) NewPdu() (Transaction_PDU, error) {
	capnp.Struct(s).SetUint16(0, 1)
	ss, err := NewTransaction_PDU(capnp.Struct(s).Segment())
	if err != nil {
		return Transaction_PDU{}, err
	}
	err = capnp.Struct(s).SetPtr(0, capnp.Struct(ss).ToPtr())
	return ss, err
}

// BackfillData_List is a list of BackfillData.
type BackfillData_List = capnp.StructList[BackfillData]

// NewBackfillData creates a new list of BackfillData.
func NewBackfillData_List(s *capnp.Segment, sz int32) (BackfillData_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return capnp.StructList[BackfillData](l), err
}

// BackfillData_Future is a wrapper for a BackfillData promised by a client call.
type BackfillData_Future struct{ *capnp.Future }

func (f BackfillData_Future) Struct() (BackfillData, error) {
	p, err := f.Future.Ptr()
	return BackfillData(p.Struct()), err
}
func (p BackfillData_Future) Metadata() BackfillData_Metadata_Future {
	return BackfillData_Metadata_Future{Future: p.Future.Field(0, nil)}
}
func (p BackfillData_Future) Pdu() Transaction_PDU_Future {
	return Transaction_PDU_Future{Future: p.Future.Field(0, nil)}
}

type BackfillData_Metadata capnp.Struct

// BackfillData_Metadata_TypeID is the unique identifier for the type BackfillData_Metadata.
const BackfillData_Metadata_TypeID = 0xe9224c8fac4d82c4

func NewBackfillData_Metadata(s *capnp.Segment) (BackfillData_Metadata, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return BackfillData_Metadata(st), err
}

func NewRootBackfillData_Metadata(s *capnp.Segment) (BackfillData_Metadata, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return BackfillData_Metadata(st), err
}

func ReadRootBackfillData_Metadata(msg *capnp.Message) (BackfillData_Metadata, error) {
	root, err := msg.Root()
	return BackfillData_Metadata(root.Struct()), err
}

func (s BackfillData_Metadata) String() string {
	str, _ := text.Marshal(0xe9224c8fac4d82c4, capnp.Struct(s))
	return str
}

func (s BackfillData_Metadata) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (BackfillData_Metadata) DecodeFromPtr(p capnp.Ptr) BackfillData_Metadata {
	return BackfillData_Metadata(capnp.Struct{}.DecodeFromPtr(p))
}

func (s BackfillData_Metadata) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s BackfillData_Metadata) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s BackfillData_Metadata) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s BackfillData_Metadata) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s BackfillData_Metadata) Origin() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s BackfillData_Metadata) HasOrigin() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s BackfillData_Metadata) OriginBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s BackfillData_Metadata) SetOrigin(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

func (s BackfillData_Metadata) OriginServerTS() int64 {
	return int64(capnp.Struct(s).Uint64(0))
}

func (s BackfillData_Metadata) SetOriginServerTS(v int64) {
	capnp.Struct(s).SetUint64(0, uint64(v))
}

// BackfillData_Metadata_List is a list of BackfillData_Metadata.
type BackfillData_Metadata_List = capnp.StructList[BackfillData_Metadata]

// NewBackfillData_Metadata creates a new list of BackfillData_Metadata.
func NewBackfillData_Metadata_List(s *capnp.Segment, sz int32) (BackfillData_Metadata_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return capnp.StructList[BackfillData_Metadata](l), err
}

// BackfillData_Metadata_Future is a wrapper for a BackfillData_Metadata promised by a client call.
type BackfillData_Metadata_Future struct{ *capnp.Future }

func (f BackfillData_Metadata_Future) Struct() (BackfillData_Metadata, error) {
	p, err := f.Future.Ptr()
	return BackfillData_Metadata(p.Struct()), err
}

const schema_b8a1e7de8a3a89ec = "x\xda\xecZ\x7fp\\\xd5u>\xe7\xbe]\xafV\xd6" +
	"\x8f}\xbeK \xb1\x8dlU\x82H\x80lI\xb6e" +
	"\x09\xda\xb5\x8d\xe4\xd8\x92\x05z\x96\xe5\xd8\xae\x9d\xf8Y" +
	"\xfbl\xadY\xbd\x95\xdf\xbe\x15^\xc5\x8em0\x0d&" +
	"N\x0c\x09\x9e\x021m\xcd\xe0bH:\xc53\x81q" +
	"\x8am\xa01\x14\xcf\x84\x16\xda0\xc5m\x86\x84i:" +
	"\xe0\x0e\x996\x0c\xd0\x86\x06^\xe7\xdc\xdd\xf7\xde\xeez" +
	"\xef$\x1d\xcb\x81\xcc\xe8\x9f\x9dy\xdf\x9e\xbd{\xde\xbd" +
	"\xdf\xf9\xce9\xf7\xde\xf9\xaa\xba$\xd0Z\xfd\xa73\x80" +
	"i\xaf\x07\xa79\xb7<\xfd\x95{\x1b\xaf\xfe\x9b;A" +
	"\x1bBt\xceL\xfb\xa7\x9f[O\x9d9\x01\x81\x10@" +
	"{k\xf8]\xc67\x85C\x00|}8\x06\xe8\xac\x7f" +
	"\xf9\xf6\xb3\xcb\x97\x9c\xda\x0fZ\x0f\xa2\xf3\xce\x81\xae{" +
	"\xdex\xeb\xe8I\xe8a!\x05\xa0=\x1b\xbe\x87\xf1\xa3" +
	"\xe1\x0e\x00\xfeB\xf8-@\xe7HtC\x93\xfe\xd5w" +
	"\xf7\xd3\xd8\x8a?\xf6\x15U!\x04h?Z9C\x01" +
	"l?W\xf9S\x06\xe8t\xee\x1e|e\xc1\xbfY\x07" +
	"A\xbd\x15\x9do\xdeq\xfc\x8d\xef\xfcz\xf9\xd3\x10d" +
	"\xe4\x87Z\xf3\x08\xe3\x9d5\xe4\xc7\xc2\x9a\xdb\x01\x9d\xfb" +
	"[\x1f\xdb\xce\xee?u_y?\x8e\xd5\xfc-\xe3/" +
	"\xd7\\\x0b\xc0/\xd4\x90\x1f\xf3\x8f\x9ci8\xfd@\xfc" +
	"0h\xeb\xb0\xe0\xc7A\xa4\xc1G#\xcd\x0a\x7f8B" +
	"\x83?\x18\xa1\xc1?8\xfbg\xef\x1d\x7f\xfd\xf5\x07\xcb" +
	"y\xf2\xab\xc8\x13\x8c\xcfU\xc9x\xb6J\xc6\xdd_\xe0" +
	";\x02'\xfe\xe1\xa1\xf2\xaf\x98U\xc5+\x1eU\xc5+" +
	"6\xfc\xeb\xb7_\xfb\xc9=\xcdG\xca\xdb^\x88~\x8e" +
	"l\xd5+\x84m\xac\xade\xc7\x8b\xbb\x06\xfe\xbc\xbc\xed" +
	"\xfa\xab\xc4\xb8\xfb\xae\x12\xb6}\x9d\xcf\xda\x8fU\x1e:" +
	"\x0a\xaaV\xb0D9\x87\xcf\xcd|\x82\xf1_\xce$\x87" +
	"\x7f1\x93\x1c\xfeR`\xe3\x87k\xbe\xfe\xde\xf1\xf2\x03" +
	"\xaf\x9c%\x06\xde1\xebJ\x05\xd0\xe1\x7f\xf7\xec\xb1o" +
	"_}\xfb\x13\xa0\xf6\x14\xccr\x10C\x11l\x7f\xbf\xae" +
	"\x97\xf1\xcf\xce\xb9\x12\x80\xcf\x9d\x13\x03\xe0\xbb\xe7\\\xf9" +
	"\xec{\xc3\x1fv\x7f\xeb\xc4\x93\xea\xca\x82\xdf\x06\x19\x99" +
	"g\xe7L0\xfe\xf0\x1c1\xcbs\xc8\x0f\xef\x9f5\x0d" +
	"\x15\xdf\xeb\x9e\xaa\xd0t\xach\x7f\x7f\xce\x13\x8c\xcf\x9e" +
	"{-@{\xe7\xdc\x14\xbd\xa4\xb7\x10Z\x0f\xb2\x82%" +
	"\xc7\x10\xbd\xe6\xe3\xf5\x13\x8c\xbf\\O\xf6o\xd6\x1fB" +
	"\x9a\x94e\xdf?\xdf\xb0\xa2\xe9\x99\x12^\xf7`\x88\x01" +
	"\xb4\x1fh\xa8W\xf8\x0f\x1a\xc8\x9d\xa7\x1a\xc8\x9d\xa5\x03" +
	"\xef\xc4\xfb\xd6\xbf\xf8L\x09\xa3D\x18\xa8\x8d\x0f1\xde" +
	"\xd9(\xe8\xd7Ha\xf0\xd2_:\xff\xb1\xfaD\xe0L" +
	"\xc9\xbc\x88\x09\xdf\xd48\xc1\xf8>a\xbc\xbb\x91F~" +
	"\xd5X\xbc\xb9\xff\xce\xcf\xfc\xb0\xfc\x847^#&\xbc" +
	"\xff\x1a\xb1\x92\xdf\xe9\xeb{\xf5\xed\xd7N\xbeX\x96\xa8" +
	"\x87\x9b*\x15\xfeB\x13\x8d\xfc|\x13\x8d\xdc9\xe3\xd0" +
	"\xa9S\xf6\xd89\x9a\xc2\x8b\x16\xbe\xb1\xf9\x1f\x19\xd7\x9a" +
	"\xc9\xba\xbf\xf9\xaf\x01\x9d\xeb\xdf\xec[\xbe\xe4g\x8f\x9e" +
	"\x93\xb0\xafY\xf8\xa1^'\x16~f\xed3\xd7\xdd5" +
	"\xf0\xc5\x1f\x95\xb7=\xdc\"lO\xb7\x08\x9f\x8f\x9d\xdc" +
	"\xf3\xd6;?\xdc\xfc\xcf\xe5m\x83m\xc2\xf6\x866a" +
	"{\xdf\x893\x87\x9a\xee|\xe4|\xc9,\x07\x15\xf28" +
	"\xb3\xd0b\xfc\xc1\x85\xe4\xf1\xe1\x85\x14\xb6O\xbf\xf1\xc8" +
	"wo<\xdf\xfev\xb9i\xde\xb7\xe8!\xc6\x1f_D" +
	"\xc6\xc7\x16\xd1d\x9c\xbd\xa3\xff{\x87V\xd5_\x00m" +
	"5\xa2c\xfc\xfd\xf6'\xf9\x15\x87\xdf\xcdO\x1dv\xfc" +
	"\x0b\xe37t\x90uS\x07Y7\xcf\xdb\xf4\xb55_" +
	"\xfe\xee\x7f\x96w\xfa@\x87\x08\xc5\x13\x1d\x8f\x91\xd3\xde" +
	"X%b\x93c\xd2\xe9\xaeo1\xfe\xef]\x14\x07\xbf" +
	"\xec\xa2\xa1\xdf\x18Q\xb2\xe7\xa7%?(?\xb4v\xa3" +
	"\x98\x8f\xec\x8d?e\xf0\xb1\x930m\xc32\xf5d\xe5" +
	"\xbcm\xa9Q\xdd\xb6\x12;\xd3\x865nX\xc9\xc4\x96" +
	"y\xc3\xfa\x989f\xa5\xec\xd4\xbc\xadF\xdc\xb0t;" +
	"\x912\xe7\x8d\xb7\xce\xb3\xb3cF:\xf7\xd9\"l\xba" +
	"\xd6X\xba\x99\xd6\x87\xc9\xa0e\xa0{\xa8e\xc8L\xd7" +
	"%\xb6\x99F|\x00Q\x0b(\x01\x80\x00\x02\xa8\xd5\xf5" +
	"\x00Z\x85\x82Z\x94aH\xdff`\x18\x18\x86\x01=" +
	"/\xc2\x93\xe5\x05\x80V\x85\x05\xfcT\xd5\xde\x02\x91R" +
	"\xeb\xfdYQ\xab\xeb\x9d~\xc3\xd6\xe3\xba\xad\x03@\xa8" +
	"\xa7{(4\xd0=\xa4E<\xaf\xf5^\x00m\xb3\x82" +
	"Z\x92\xe1lt\x1c\x8c\"\xc1\x09\x82G\x14\xd4l\x86" +
	"\xb3\xd9\xc7\x043\x00u\x07\xbdcRAm'\xc3\xd9" +
	"\xcaG\x04+\x00j\x86\xe01\x05\xb5]\x0c\x1d=c" +
	"\x8ft\xe7\xfe\x0f#>%\x011\x02\xe8\x8c\xfa\xde`" +
	"\xc4\x7f\x85\xdc\xb7!#\x9e\xc1\x88\xff.ytL\xa0" +
	"\xdeK\xe5Gr\xa7u\xfa\xa4.\xae\x95J\x8d\xae5" +
	"\xact\"e\xe2bm\x01\xcdS\x147\x01\xf0M\xd8" +
	"\x060\xb8\x0e\x15\x1c\x8c#C\x151\x8a_\x02\xe0:" +
	"N\x00\x0cn&<\x89\x0c\x91E\xf1\xcb\x00<\x81]" +
	"\x00\x83q\x82\xc7\xc8\\\xc1(n\x06\xe0\xa3\x02\x1f!" +
	"\xdc&<\xc0\xa2\xa8\x03\xf0\x1d\xd8\x0c0\x98$|'" +
	"\xe1A%\x8a[\x00x\x06\x97\x01\x0c\x8e\x11\xbe\x8b\xf0" +
	"i\x81(\x0e\x03\xf0,\xf6\x02\x0c\xee$|?\xe1\xa1" +
	"`\x14\xe3\x00|\x9f\xb0\xdfE\xf8\xdd\x84WL\x8b\xa2" +
	"\x01\xc0\xef\xc2\x0d\x00\x83\xfb\x09\xff\x0b\xc2\xc3\xa1(n" +
	"\x05\xe0\x0f\x0b\xfc\x08\xe1'\x09\xaf\xac\x88\xe26\x92m" +
	"\xe1\xe7\x93\x84\xff\x88\xf0\xe9\xe1(\x8e\x00\xf0s\xc2\xfe" +
	"%\xc2\x7fNxUe\x14\x13\x00\xfcM\xe1\xcf\xcf\x08" +
	"\x7f\x07\x19\xd6\xc5\x8d1{\xc4\x0b\x81\x94\x95\xd8\x960" +
	"\x07\x0d\x88\xd1\x0a\xad\x19\xc4 0\x0c\x02\xc6h\xbaW" +
	"vc\x150\xac\x02\x8c\xa5\x0d3nX\xeec--" +
	"\x94\xfb\xb0\xc72\xe2\xfa\xb0\x9dv\x9f\x9d\xb4\xad\xdbF" +
	"\x9f\x91%&\xb96\xc3)\xd36L\x1b#~>\xcb" +
	"\xb3\x85X\xd93n\x98\xa0\xd8i\xac\x01\x1cPP\xfc" +
	"\xaa\x06\xd0\x19\xb3\x8cq\xc9w\xb1\x11==b\\\xf4" +
	"\x8btb\x9b\xa9\xdb\x19\x0b\x14\xff\xbb\x88\x9f\xb7\x00\x85" +
	"U\xc6L\x0b\x9d\xc8q\xdd\xab\x04K\xf8{i\xb2\xd0" +
	"\x9bN\x99k\xf5d\xc6h\xb99\xa4'\x93$I\x15" +
	"^p7Q\x14\x7f^AmA\x9e\xb0\x04\xb6v\x01" +
	"h\xd7+\xa8\xad`\xe8l\xcd\x98yI\xf1&16" +
	"\xa6[\xfah\xc1k\x15NeM\x81\xe3\x97\xa6\xaa\x83" +
	"\xe27}F6\xbd\xdaH\x8f\xa5\xcc\xb4\x01Z\x05\x16" +
	"\xe4h5\xdc\xebW\x96jx{\xa1\x909\xb7&\xe3" +
	"k\x0d+\xb1\x15j\xb3}F\xb6P\xcf6\xe4\xf5l" +
	"W\x91\x9eei&v*\xa8\xed/\xd2\xb3}d\xbd" +
	"WA\xed\xc7Ez\xf6\xaa\x05\xa0\xbd\xa2\xe0`\x03\xb2" +
	"\xdfv\xb1\x8b\x85\xcd{\x8b\xfcb\x8f\x93\xb3\xd9>\x03" +
	"\x94l\x1a#~\xf5\x06\xb0\x04U\xac\xd3\x02\x0c\x0bA" +
	"\x15\xaf\xa5\xc9\x10\x8bI\x9f\x91<\xf7\xaa\x81\x89\xe1R" +
	"\xee\xeb\xd7\xd1\xeb_\xca\x88\x11\x7f\x8e'UW/^" +
	"\xde\x16w\xcd\xc4\x92\x95\x10u\xb5OT\x8f\xa7\xf5y" +
	"\x9e.f\xe8\x18;\xc7\x12\x96\x11_\x03\xe8iG\xe8" +
	"6#+&\xa4\xfa2\x04\xd3\xf2\xda\x84\x91\x8c\x978" +
	"\xd9\x0c\xa05(\xa8\xcd/\x88\xa6\x1b\xda|\xcfkM" +
	"}\xd4\xd3\xab\xbaq\x1a\xa8\x8c\x12]\xfe\xbc\xd5\xee\xe6" +
	"\xadY\x92\xbc5\xbb|\xde\xbaZ\x92\xb7\xea$yk" +
	"\x8e$o\xcd\x95\xe4\xadzI\xde\xfa\x03I\xdej\x90" +
	"\xe4\xadFI\xde\xbaF\x92\xb7\xae\x95\xe4\xad\xcfO\xe5" +
	"\xadK\xc8[\x97\x8d\xbfJ\xeb|\x97\xc0\xb7K\x08\xbc" +
	"\xb3<\x81\xb3\x12\x02OH\x08\xfc\x15\x09\x81wI\x08" +
	"\xbc[B\xe0\xafJ\x08\xbcGB\xe0\xbd\x12\x02\xef\x93" +
	"\x10\xf8\x0e\x09\x81\xef\x9c\"\xf0\xa7\x91\xc0\xd8\xe9\xf2w" +
	"\xbb\x84\xbf\xb7\x95\xe7oR\xc2\xdfQ\x09\x7fM\x09\x7f" +
	"S\x12\xfe\x8eI\xf8\xbbC\xc2_K\xc2\xdf\xb4\x84\xbf" +
	"\xb6\x84\xbf\x19\x09\x7f\xc7\xa7\xf8\xfb\x895\x0e\x05\xfc\xad" +
	"m\xe9\xe9\x1e*\xa9u\x96\x95\xabu\x96\xf9\xb5\xce\x1e" +
	"#\x9eYS8\xcb\xf2\x19\xbc\xfc\xf1\xd6\xaa-v=" +
	"\xe7Y\x11n6\xf1i/z\xd5$\xdf-\xe8\xed\xd3" +
	"\x9e\xe5:\x00\xbeOD\xe1^\xc2\x0f\xba\xe1\xa6\x00\xf0" +
	"\x03\x82\xc6\x82\xf6\xf7\xba\xe1\x16\x00\xe0\xdf\x10\xf8\xdd\x84" +
	"\xdf\xef\x86[\x10\x80\xdf'\xc2\xf0 \xe1\x0f\xb8\xe16" +
	"\x0d\x80\x1f\x16\xff{/\xe1G\xdcp\x13\xbb\xb4\x82\xf6" +
	"\x0f\x10\xfe\xa8\x1bn\x15\x00\xfc\xa8\xb0\x17au\xdc\x0d" +
	"\xb70\x00?&\xc2\xe7Q\xc2\x9fs\xc3\xad\x12\x80\x9f" +
	"\x16\xf8)\xc2_w\xc3m:\x00\x7fM\xf8\xf9\x8a\x1b" +
	"V\"\xdc\xaa\x00\xf8\x05a\xff6\xe1\x01\xc6P\xad\x9e" +
	"\x1e\xc5j\x00\x8e\xac\x17`5Sp\xb0\x8a\x95F\xe1" +
	"\x1ec\xdc0m?\xda>\xa5Q\x19\xf17\xa5\xf3q" +
	"T.>/\xb2\xfa\x1dDj\xc5%1\xbf_\x1f\x03" +
	"\xd0\x02\x88\xde\xfe?\xb6\xd5\xf5\x98\xb6\x95-\xdc}\\" +
	"\x96\xdf}\\L\xb1i\xdaV\xa2\xc0m\xf7\x87e{" +
	"C\x0a\x0f\xb2\\Z\x81j\xb0^\x0d\xb6\x85\xfa\x8cl" +
	"\x9dh\x83&\xef\x05b-\xc2\xe1\x12\x91\xa9\xff\x0d\x0d" +
	"\x95h\xf1f`Q#\x8b3\xbc\xdejF\xf0\xe2\xaf" +
	".\x87:\x0et\x0f\x89\xad\x09\x8f8jx\xc2_k" +
	"5\xdc\xeb\x10\xc9\xec\xd5\xc6V\x88\x19\x96a\x0e\x1b\xce" +
	"\x90\xcf\x0b\xedz%P\xe58Xp6\xc4\x1bq;" +
	"\xb0j\xfc\x98P\xef\xe0\x80\xab\x02e\x1f\x11\xea\x1d|" +
	"\xa9\x1f\x11\xa8\xfc\x9a@\xef,@\xbd@`\xe0\x7f\x09" +
	"\xf4\x0e\x13\xd4\xd7\x08\x0c~H\xa0\xb7K\xae>O\xe0" +
	"\xb4_\x11\xe8\x1d\x95\xa8\x7fE`\xe8\x7f\x08\xf4\x0e\x11" +
	"\xd5\x07\x09\xac\xf8o\x02\xbd\xe31\xf5.\x02\xc3\x1f\x10" +
	"\xe8\x9d\xaf\xa9;,`\xd5\x95\xef\x13\xe8\xed\xf4\xab\x9b" +
	",`\x8e\xab\xcaP\x9bH\x99\xad\xc5\x8fm\xc5\x8f\xed" +
	"\xc5\x8f\x0b\x8a\x1f\x17\x16?.*~\xec(~\\\\" +
	"\xfc\xd8\xe9?\xd6\x91\x1b\xf3K\x9e['\x89\xd7\xbd\xe9" +
	"T,\xb7_ \xe8\xe1\x1fl\x86\xdb\x0a\xce[\x83\xcd" +
	"u\xcb\x13F2^{\xb3\x9eLj\xb3\x04\x19\x04\xfd" +
	"\x9fj\x06\xd0\x9eTP;\xc5p6~\xecDr\x01" +
	"\xf0\x03\x8a\xe4\xef+\xa8=\xc7p6\xfb\xc8\xdd\xaa:" +
	"\xdd\x05\xa0\x9dTP;\xcb\x90\xe8\x90\xdb\xa9z\x9e\xd0" +
	"S\x0aj/1$>\x88$\xa5\xbe@1\xf4\x9c\x82" +
	"\xdaO\x18\x12!D\x8aR\xcf\x93\xed\x8f\x15\xd4\xfe\x8b" +
	"!1B$(\xf5\x17\xe4\xc5\xdb\x0aj\xef1\xac5" +
	"3\xc9$L\xdb\xb3%\x95J\x1a\xba\x89\x08\x0c\x110" +
	"ffF\xb7\x18\x16N\x07\x86\xd3I\xd6m+an" +
	"\xf36:t\xcb\xd2\xb3\xd2\xed\xc2Xj\xcbvc\xd8" +
	"\xf6\xbf\xf7\xa6)\xf7}\xed\xb0\x9eLb\xc4\x9f\xb0\xcb" +
	"Z5\xb8\x81jXF\xc8\x1c6\xf2z\xe4\xaeHa" +
	"\xd5C\xd1\x99W\xa4\xae\xc2\xb2\xa78\x15\xc6\xd2#z" +
	"\xdb\xc2E^\x16\x9b\x1c\xf5\xd12\x86\x95\xbd\xd9J\xd8" +
	"\x86\xa5$\xf4\x92c\xa6G\x00\xb4\x88\x82\xda,\x86\xce" +
	"h\xc2L\x8cfF\xd7\xa2\x9eL\xc4\x87L;\x11J" +
	"\xfa\xd9x\x92X>\x98\xd8\x16\x13\x99\xd0(Q\xef\xae" +
	"r\xea\xbd!\xbfi\xb7\x97Q\xfa\xa7\x7f\xf33|a" +
	"F\xbd\xf4=\xd0\xcb_Vv\xb8m\xdc\x80\xa4\x8d\xd3" +
	"\xca\xb7q\xab%m\xdc\xa0\xa4\x8d[#i\xe3\x86$" +
	"m\xdcZI\x1b\xf7EI\x1b\xb7N\xd2\xc6\xad\x97\xb4" +
	"q\x1b$m\xdc\x1fK\xda\xb8\x8dSm\xdc'\xb6\x0d" +
	"Qf\x9f\xdd?')\x09\xd8\x0de6\xd9\xb7\x03h" +
	"\xf3\x15\xd4nb\xe8\xe4\xfe\xff\x16\x1d\x14\x7f\x1b\xdb\x19" +
	"\xcfK\x0b\xd4&\xcai\xcb\xe4\x1d\xad\xe7\xddF\xa1w" +
	"U\x9e\xd7=\x94\xcb\x96(\xa8\xad*\x90\x99\x95\xa4=" +
	"\xdd\x0aj\x03\xb9\x88\xa3\x04\xd9?\x01\xa0\xadRP[" +
	"\xc7\xb0\xce\xdei\x16\xd0*G\xbf\xdf\xd8\xbe\xfc\x0e$" +
	"\xa5-\xd7\xa9F\xb1\xa6|\xabZ+iU#\x92V" +
	"U\x95\xb4\xaa3$\xad*\x97\xb4\xaaQI\xabz\x85" +
	"\xa4U\xfd\x8c\xa4U\xbdR\xd2\xaa^%iU?+" +
	"iU?'iUgN\xb5\xaa\xbf\xaf\x9b\xa2\x0b\xdd" +
	"l\xbaH\x92M;\xcag\xd3\xc5\x92l\xda)\xc9\xa6" +
	"]\x92lz\xa3$\x9b\xde$\xc9\xa6\x7f(\xc9\xa6\x7f" +
	"$\xc9\xa61I6]\"\xc9\xa6K%\xd9t\xd9T" +
	"6\xfdT\xf2w\x81\xcb\xdf&\x09\x7f\x9b\xcb\xf3\xf7:" +
	"\x09\x7f\xaf\x97\xf0\xf7\x06\x09\x7f[$\xfc\x9d'\xe1\xef" +
	"|\x09\x7f[%\xfcm\x93\xf0\xb7]\xc2\xdf\x05\x12\xfe" +
	".\x9c\xe2\xef'\xb6U\xb84c\xd7\x89\xcbw\x03\xa2" +
	"a\xf2.\xc5P\xb9\xb4QAm\xc4\xaf\xfc\x8c.\xff" +
	"\xe2\x9f\xbb\x1b\xae&\xb6\xf8\xd7\xfeT\x85\xe5\xf6\x18v" +
	"l\xc8\xdf\xee;\xc806j\xd8#\xa9\xb8\xbb\x94\xa5" +
	"\x95U\xdcH\xdb\x09S\xb7!D\x11S\xb6\xf1\x93\xce" +
	"\xcf\xe4\xb4\xce\xb9zX\xc4\xac\x922\x7f\x9b\x0b\x1c\xcb" +
	"$\x178\xf6\x8c\xe7\x03\xbf\xb4\xb7\xbf\xb4\x92w\x99>" +
	"|\xdb\xd6D2I\xab\x94\xafy\x95\xdcz\x95o\xad" +
	"=?'\xfc\xeb0\x9f\x9e\x82Vim\xd5\xe6\xe7d" +
	"q?\x00_*d\xf1&\x8a\xfb\x15\xae,\xde\x05\xc0" +
	"{\x84,v\x13>\x90\x97\xc5?\x01\xe0\xfdBVV" +
	"\x10\xbc\xc6\x95\xc5\xaf\x01pM\xe0\xab\x08_\xe7\xca\xe2" +
	"\xdd\x00|H\xc8\xe2\x00\xe1\x1b]Y<\x00\xc0\xd7\x0b" +
	"\xb9\xf1\xd5\x98d\xf1\x1e\xa1\xc6$\x7f\x1b\x09\x1fqe" +
	"\xf1\xeb\x00\xdc\x10\xb2\x15w\x0bo!\x8b\x07E\xe5\xbd" +
	"\xc1\x95\xcb\x07\\Y\xfc\x86\xa8\x8c\xbb\xdc\xca\xf8{\xae" +
	",~\x13\x80?.\xec\x8f\x13~\xd6\x95\xc5C\x00\xfc" +
	"y\xe1\xcfs\xae\\N\xbe\xfcM\x9da\x96\xc6\x12\xea" +
	"Z\x00\x0b\xae\xa9\xab\xd8[xa\xb0h\x97\xaf\xe0V" +
	"\xa4\xbf\xcbWt\xdd\xac\xf82\x9f7\xe8'|\x1fy" +
	"\x91[\x81\xdc,\xa9@\xba\xcbW =\x92\x0ad\xb9" +
	"\xa4\x02\xf9\x82\xa4\x02Y!\xa9@VJ*\x90^I" +
	"\x05\xd2'\xa9@VI*\x90~I\x05r\x8b\xa4\x02" +
	"\xb9u\xaa\x02\xf9\xff\x87\xe4\xff\x05\x00\x00\xff\xff\xbb\x7f" +
	"\xe5\x01"

func RegisterSchema(reg *schemas.Registry) {
	reg.Register(&schemas.Schema{
		String: schema_b8a1e7de8a3a89ec,
		Nodes: []uint64{
			0x83ba1e25907bb64e,
			0x84bc4046c477cd59,
			0x84f27e61295a149c,
			0x8c72e334d0537d39,
			0x91bc94026aa73194,
			0x956498bd24be9c30,
			0x99d8d8a8f49ec4f6,
			0x9acfb10471134744,
			0x9c2a8adcd593db24,
			0x9f507cc6712e323f,
			0xa18f0aa774bf394b,
			0xa8f48b54fa5c045e,
			0xaa771e93a5bfc713,
			0xb000b19244fa63f4,
			0xb1beb572e4d306be,
			0xb646fc9bdea8828e,
			0xbb294824d9b4424b,
			0xbbc6594b64ec5041,
			0xbe04b152eaffa6c8,
			0xc316834d603865d1,
			0xc6b8d5e8d14b4b9b,
			0xc97074bcbc8f1239,
			0xc9a4e040464be12c,
			0xcc5750852bbb0f1b,
			0xd760c3ece77fb8a5,
			0xd9a283298fbeb191,
			0xe833d93baba2deb6,
			0xe9224c8fac4d82c4,
			0xefab5f54875d2f2a,
			0xf2951513b06ace65,
			0xf66c06d9790368de,
		},
		Compressed: true,
	})
}
